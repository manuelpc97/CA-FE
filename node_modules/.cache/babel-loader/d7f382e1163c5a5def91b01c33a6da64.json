{"ast":null,"code":"var _jsxFileName = \"/Users/manuel/Documents/CA/ca-fe/src/components/Form/CheckBoxInput.js\";\nimport React, { Component } from 'react';\nimport { FormControl, FormGroup, FormControlLabel, Checkbox } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nconst OrangeCheckbox = withStyles({\n  root: {\n    '&$checked': {\n      color: '#ff9800'\n    }\n  },\n  checked: {}\n})(props => /*#__PURE__*/React.createElement(Checkbox, Object.assign({\n  color: \"default\"\n}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 15\n  }\n})));\n\nclass CheckBoxInput extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      let {\n        checked\n      } = event.target;\n      this.storeQuestion(checked);\n      this.setState({\n        checked\n      });\n    };\n\n    this.storeQuestion = checked => {\n      let completedAnswer = {\n        question: this.props.question.question,\n        checked\n      };\n      const isRequired = this.props.question.inputType.required ? checked : true;\n      this.props.requiredQuestion(isRequired, this.props.index);\n      this.props.onStateChange(completedAnswer, this.props.index);\n    };\n\n    this.state = {\n      checked: false\n    };\n  }\n\n  componentDidMount() {\n    this.storeQuestion(this.state.checked);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(FormControl, {\n      component: \"fieldset\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormControlLabel //  <Checkbox checked={this.state.checked} onChange={this.handleChange} name=\"check\" /> <OrangeCheckbox checked={this.state.checked} onChange={this.handleChange} name=\"check\" />\n    , {\n      control: /*#__PURE__*/React.createElement(OrangeCheckbox, {\n        checked: this.state.checked,\n        onChange: this.handleChange,\n        name: \"check\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 30\n        }\n      }),\n      label: this.props.question.question,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    })));\n  }\n\n}\n\nexport default CheckBoxInput;","map":{"version":3,"sources":["/Users/manuel/Documents/CA/ca-fe/src/components/Form/CheckBoxInput.js"],"names":["React","Component","FormControl","FormGroup","FormControlLabel","Checkbox","withStyles","OrangeCheckbox","root","color","checked","props","CheckBoxInput","constructor","handleChange","event","target","storeQuestion","setState","completedAnswer","question","isRequired","inputType","required","requiredQuestion","index","onStateChange","state","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,gBAAjC,EAAmDC,QAAnD,QAAmE,mBAAnE;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,MAAMC,cAAc,GAAGD,UAAU,CAAC;AAC9BE,EAAAA,IAAI,EAAE;AACF,iBAAa;AACTC,MAAAA,KAAK,EAAE;AADE;AADX,GADwB;AAM9BC,EAAAA,OAAO,EAAE;AANqB,CAAD,CAAV,CAOnBC,KAAD,iBAAW,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAC;AAAhB,GAA8BA,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAPS,CAAvB;;AASA,MAAMC,aAAN,SAA4BX,SAA5B,CAAsC;AAClCY,EAAAA,WAAW,CAACF,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAWnBG,YAXmB,GAWHC,KAAD,IAAW;AACtB,UAAI;AAAEL,QAAAA;AAAF,UAAcK,KAAK,CAACC,MAAxB;AACA,WAAKC,aAAL,CAAmBP,OAAnB;AACA,WAAKQ,QAAL,CAAc;AAAER,QAAAA;AAAF,OAAd;AACH,KAfkB;;AAAA,SA6BnBO,aA7BmB,GA6BFP,OAAD,IAAa;AACzB,UAAIS,eAAe,GAAG;AAClBC,QAAAA,QAAQ,EAAE,KAAKT,KAAL,CAAWS,QAAX,CAAoBA,QADZ;AAElBV,QAAAA;AAFkB,OAAtB;AAIA,YAAMW,UAAU,GAAG,KAAKV,KAAL,CAAWS,QAAX,CAAoBE,SAApB,CAA8BC,QAA9B,GAAyCb,OAAzC,GAAmD,IAAtE;AACA,WAAKC,KAAL,CAAWa,gBAAX,CAA4BH,UAA5B,EAAwC,KAAKV,KAAL,CAAWc,KAAnD;AACA,WAAKd,KAAL,CAAWe,aAAX,CAAyBP,eAAzB,EAA0C,KAAKR,KAAL,CAAWc,KAArD;AACH,KArCkB;;AAEf,SAAKE,KAAL,GAAa;AACTjB,MAAAA,OAAO,EAAE;AADA,KAAb;AAGH;;AAEDkB,EAAAA,iBAAiB,GAAG;AAChB,SAAKX,aAAL,CAAmB,KAAKU,KAAL,CAAWjB,OAA9B;AACH;;AAQDmB,EAAAA,MAAM,GAAG;AACL,wBAAO,oBAAC,WAAD;AAAa,MAAA,SAAS,EAAC,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACH,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,gBAAD,CACI;AADJ;AAEI,MAAA,OAAO,eAAE,oBAAC,cAAD;AAAgB,QAAA,OAAO,EAAE,KAAKF,KAAL,CAAWjB,OAApC;AAA6C,QAAA,QAAQ,EAAE,KAAKI,YAA5D;AAA0E,QAAA,IAAI,EAAC,OAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFb;AAGI,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWS,QAAX,CAAoBA,QAH/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADG,CAAP;AASH;;AA5BiC;;AAyCtC,eAAeR,aAAf","sourcesContent":["import React, { Component } from 'react';\nimport { FormControl, FormGroup, FormControlLabel, Checkbox } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst OrangeCheckbox = withStyles({\n    root: {\n        '&$checked': {\n            color: '#ff9800',\n        },\n    },\n    checked: {},\n})((props) => <Checkbox color=\"default\" {...props} />);\n\nclass CheckBoxInput extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            checked: false\n        }\n    }\n\n    componentDidMount() {\n        this.storeQuestion(this.state.checked);\n    }\n\n    handleChange = (event) => {\n        let { checked } = event.target;\n        this.storeQuestion(checked);\n        this.setState({ checked });\n    }\n\n    render() {\n        return <FormControl component=\"fieldset\">\n            <FormGroup>\n                <FormControlLabel\n                    //  <Checkbox checked={this.state.checked} onChange={this.handleChange} name=\"check\" /> <OrangeCheckbox checked={this.state.checked} onChange={this.handleChange} name=\"check\" />\n                    control={<OrangeCheckbox checked={this.state.checked} onChange={this.handleChange} name=\"check\" />}\n                    label={this.props.question.question}\n                />\n            </FormGroup>\n        </FormControl>\n    }\n\n    storeQuestion = (checked) => {\n        let completedAnswer = {\n            question: this.props.question.question,\n            checked\n        }\n        const isRequired = this.props.question.inputType.required ? checked : true;\n        this.props.requiredQuestion(isRequired, this.props.index);\n        this.props.onStateChange(completedAnswer, this.props.index);\n    }\n}\n\nexport default CheckBoxInput;"]},"metadata":{},"sourceType":"module"}