{"ast":null,"code":"import _regeneratorRuntime from\"/Users/manuel/Documents/CA/ca-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/manuel/Documents/CA/ca-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/manuel/Documents/CA/ca-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/manuel/Documents/CA/ca-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _createSuper from\"/Users/manuel/Documents/CA/ca-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _inherits from\"/Users/manuel/Documents/CA/ca-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import'../../styles/Form.css';import React,{Component}from'react';import{connect}from'react-redux';import{saveFilledForm,promptError,promptNotification}from'./../../actions';import{Grid}from'@material-ui/core';import Input from'./Input';import Button from\"../Common/CustomButtons/Button.js\";import Card from'../Common/Card/Card';import CardHeader from'../Common/Card/CardHeader';import CardBody from'../Common/Card/CardBody';import CardFooter from'../Common/Card/CardFooter';var Form=/*#__PURE__*/function(_Component){_inherits(Form,_Component);var _super=_createSuper(Form);function Form(props){var _this;_classCallCheck(this,Form);_this=_super.call(this,props);_this.renderSubmitButton=function(){var submitButton=_this.props.parentForm?/*#__PURE__*/React.createElement(Button,{color:\"warning\",type:\"button\",onClick:_this.handleClick},\"Guardar\"):'';return submitButton;};_this.renderBackButton=function(){return _this.props.parentForm?/*#__PURE__*/React.createElement(Button,{color:\"warning\",type:\"button\",onClick:_this.props.handleBack},\"Regresar\"):'';};_this.renderQuestions=function(){var shouldInitializeArray=_this.props.form.questions.length!==_this.completedForm.completedQuestions.length;return _this.props.form.questions.map(function(question,index){if(shouldInitializeArray===true){var questionObject={};if(question.inputType.tag==='label')questionObject['label']=question.question;_this.completedForm.completedQuestions.push(questionObject);}return/*#__PURE__*/React.createElement(Input,{question:question,onStateChange:_this.handleStateChange,requiredQuestion:_this.handleRequiredQuestions,index:index,key:'k'+index});});};_this.handleStateChange=function(completedQuestion,index){_this.completedForm.completedQuestions[index]=completedQuestion;if(_this.props.subform)_this.props.onStateChange(_this.completedForm.completedQuestions);if(!_this.props.subform)console.log('FORM: ',_this.completedForm);};_this.handleRequiredQuestions=function(wasAnswered,index){_this.answersRequired[index]=wasAnswered;var pendingRequiredAnswers=_this.answersRequired.includes(false);_this.setState({pendingRequiredAnswers:pendingRequiredAnswers});};_this.handleClick=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!_this.state.pendingRequiredAnswers){_context.next=3;break;}_this.props.promptError('Formulario Incompleto');return _context.abrupt(\"return\");case 3:_context.next=5;return _this.saveForm();case 5:_this.props.promptNotification('Formulario guardado','success');_this.props.handleSubmit();case 7:case\"end\":return _context.stop();}}},_callee);}));_this.saveForm=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var timestamp,filledForm2Save,tag;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:timestamp=new Date();filledForm2Save={filledForm:JSON.stringify(_this.completedForm).split('\"').join('\\''),userId:_this.props.user._id,timestamp:timestamp};tag=_this.props.insurance?'insurance':'product';filledForm2Save[\"\".concat(tag,\"Id\")]=_this.props[tag]._id;console.log('Saving: ',filledForm2Save);_this.props.handleBack();_context2.next=8;return _this.props.saveFilledForm(filledForm2Save);case 8:_this.props.handleSubmit();case 9:case\"end\":return _context2.stop();}}},_callee2);}));_this.state={pendingRequiredAnswers:true};_this.completedForm={};if(!_this.props.subform)_this.completedForm['formName']=_this.props.form.formName;_this.completedForm['completedQuestions']=[];_this.answersRequired=[];return _this;}_createClass(Form,[{key:\"render\",value:function render(){return!this.props.subform?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Grid,{container:true,item:true,xs:12,md:12,sm:12,lg:12,spacing:0,zeroMinWidth:true},/*#__PURE__*/React.createElement(Grid,{item:true,sm:2}),/*#__PURE__*/React.createElement(Grid,{item:true,sm:8},/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(CardHeader,{color:\"warning\"},/*#__PURE__*/React.createElement(\"h3\",null,this.props.form.formName)),/*#__PURE__*/React.createElement(CardBody,{className:\"form-body\"},this.renderQuestions()),/*#__PURE__*/React.createElement(CardFooter,null,/*#__PURE__*/React.createElement(\"div\",null,this.renderBackButton(),this.renderSubmitButton())))),/*#__PURE__*/React.createElement(Grid,{item:true,sm:2}))):this.renderQuestions();}}]);return Form;}(Component);var mapStateToProps=function mapStateToProps(state){return{user:state.user.currentUser,insurances:state.insurance.insurances};};export default connect(mapStateToProps,{saveFilledForm:saveFilledForm,promptError:promptError,promptNotification:promptNotification})(Form);","map":{"version":3,"sources":["/Users/manuel/Documents/CA/ca-fe/src/components/Form/Form.js"],"names":["React","Component","connect","saveFilledForm","promptError","promptNotification","Grid","Input","Button","Card","CardHeader","CardBody","CardFooter","Form","props","renderSubmitButton","submitButton","parentForm","handleClick","renderBackButton","handleBack","renderQuestions","shouldInitializeArray","form","questions","length","completedForm","completedQuestions","map","question","index","questionObject","inputType","tag","push","handleStateChange","handleRequiredQuestions","completedQuestion","subform","onStateChange","console","log","wasAnswered","answersRequired","pendingRequiredAnswers","includes","setState","state","saveForm","handleSubmit","timestamp","Date","filledForm2Save","filledForm","JSON","stringify","split","join","userId","user","_id","insurance","formName","mapStateToProps","currentUser","insurances"],"mappings":"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","sourcesContent":["import '../../styles/Form.css';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { saveFilledForm, promptError, promptNotification } from './../../actions';\n\nimport { Grid } from '@material-ui/core';\n\nimport Input from './Input';\nimport Button from \"../Common/CustomButtons/Button.js\";\nimport Card from '../Common/Card/Card';\nimport CardHeader from '../Common/Card/CardHeader';\nimport CardBody from '../Common/Card/CardBody';\nimport CardFooter from '../Common/Card/CardFooter';\n\nclass Form extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            pendingRequiredAnswers: true\n        }\n        this.completedForm = {}\n        if (!this.props.subform) this.completedForm['formName'] = this.props.form.formName;\n        this.completedForm['completedQuestions'] = [];\n        this.answersRequired = [];\n    }\n\n    render() {\n        return (!this.props.subform ? <>\n            <Grid container item xs={12} md={12} sm={12} lg={12} spacing={0} zeroMinWidth={true}>\n                <Grid item sm={2} />\n                <Grid item sm={8}>\n                    <Card>\n                        <CardHeader color='warning'>\n                            <h3>{this.props.form.formName}</h3>\n                        </CardHeader>\n                        <CardBody className='form-body'>\n                            {this.renderQuestions()}\n                        </CardBody>\n                        <CardFooter>\n                            <div>\n                                {this.renderBackButton()}\n                                {this.renderSubmitButton()}\n                            </div>\n                        </CardFooter>\n                    </Card>\n                </Grid>\n                <Grid item sm={2} />\n            </Grid>\n        </> : this.renderQuestions())\n    }\n\n    renderSubmitButton = () => {\n        const submitButton = this.props.parentForm ?\n            <Button color=\"warning\" type=\"button\" onClick={this.handleClick}>\n                Guardar\n                </Button>\n            : '';\n        return submitButton;\n    }\n\n    renderBackButton = () => {\n        return this.props.parentForm ?\n            <Button color=\"warning\" type=\"button\" onClick={this.props.handleBack}>\n                Regresar\n                    </Button>\n            : '';\n    }\n\n    renderQuestions = () => {\n        const shouldInitializeArray = (this.props.form.questions.length !== this.completedForm.completedQuestions.length);\n        return this.props.form.questions.map((question, index) => {\n            if (shouldInitializeArray === true) {\n                let questionObject = {};\n                if (question.inputType.tag === 'label') questionObject['label'] = question.question\n                this.completedForm.completedQuestions.push(questionObject);\n            }\n            return <Input\n                question={question}\n                onStateChange={this.handleStateChange}\n                requiredQuestion={this.handleRequiredQuestions}\n                index={index}\n                key={'k' + index} />\n        })\n    }\n\n    handleStateChange = (completedQuestion, index) => {\n        this.completedForm.completedQuestions[index] = completedQuestion;\n        if (this.props.subform) this.props.onStateChange(this.completedForm.completedQuestions);\n        if (!this.props.subform) console.log('FORM: ', this.completedForm);\n    }\n\n    handleRequiredQuestions = (wasAnswered, index) => {\n        this.answersRequired[index] = wasAnswered;\n        const pendingRequiredAnswers = this.answersRequired.includes(false);\n        this.setState({ pendingRequiredAnswers })\n    }\n\n    handleClick = async () => {\n        if (this.state.pendingRequiredAnswers) {\n            this.props.promptError('Formulario Incompleto');\n            return;\n        }\n        await this.saveForm();\n        this.props.promptNotification('Formulario guardado', 'success');\n        this.props.handleSubmit();\n    }\n\n    saveForm = async () => {\n        const timestamp = new Date();\n        const filledForm2Save = {\n            filledForm: JSON.stringify(this.completedForm).split('\"').join('\\''),\n            userId:  this.props.user._id,\n            timestamp,\n        }\n\n        const tag = this.props.insurance? 'insurance' : 'product'\n        filledForm2Save[`${tag}Id`] = this.props[tag]._id\n        console.log('Saving: ', filledForm2Save);\n        this.props.handleBack();\n        await this.props.saveFilledForm(filledForm2Save)\n        this.props.handleSubmit();\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        user: state.user.currentUser,\n        insurances: state.insurance.insurances,\n    }\n}\n\nexport default connect(mapStateToProps, { saveFilledForm, promptError, promptNotification })(Form);"]},"metadata":{},"sourceType":"module"}