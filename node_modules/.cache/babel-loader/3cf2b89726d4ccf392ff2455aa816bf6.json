{"ast":null,"code":"import _regeneratorRuntime from\"/Users/manuel/Documents/CA/ca-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/manuel/Documents/CA/ca-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/manuel/Documents/CA/ca-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/manuel/Documents/CA/ca-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _createSuper from\"/Users/manuel/Documents/CA/ca-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _inherits from\"/Users/manuel/Documents/CA/ca-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import{connect}from'react-redux';import{Grid}from'@material-ui/core';import ProductCard from'./ProductCard';import ProductChart from'./ProductChart';import Form from'./../Form/Form';import{getAllProducts,getProductsByInsurance,getAllBusiness,getAllCovers,getFormById,clearForm,promptNotification}from'./../../actions';var Product=/*#__PURE__*/function(_Component){_inherits(Product,_Component);var _super=_createSuper(Product);function Product(props){var _this;_classCallCheck(this,Product);_this=_super.call(this,props);_this.buildProductManager=function(){if(_this.props.products.length===0||_this.props.businessList.length===0||_this.props.covers.length===0||_this.props.insurances.length===0)return;_this.manager=_this.props.products.map(function(product){var newProduct=Object.assign({},product);newProduct.business=_this.props.businessList.find(function(business){return product.business===business._id;});newProduct.covers=_this.props.covers.filter(function(cover){return cover.product===product._id;});newProduct.insurance=_this.props.insurances.find(function(insurance){return insurance._id===product.insurance;});return newProduct;});};_this.renderProducts=function(){return _this.manager.map(function(product,index){return/*#__PURE__*/React.createElement(ProductCard,{product:product,key:index,onSelect:_this.onSelectCard});});};_this.renderTable=function(){return/*#__PURE__*/React.createElement(ProductChart,{product:_this.state.currentProduct,handleBack:_this.returnToProducts,handleForm:_this.openForm,handleAgent:_this.handleAgentContact});};_this.renderForm=function(){return/*#__PURE__*/React.createElement(Form,{form:_this.props.form,parentForm:true,handleBack:_this.handleFormBack});};_this.returnToProducts=function(){_this.setState({currentProduct:{},showTable:false,showForm:false});};_this.onSelectCard=function(currentProduct){_this.setState({currentProduct:currentProduct,showTable:true,showForm:false});};_this.openForm=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:console.log(_this.state.currentProduct);if(_this.state.currentProduct.form){_context.next=4;break;}_this.props.promptNotification('Formulario no disponible',\"warning\");return _context.abrupt(\"return\");case 4:_context.next=6;return _this.props.getFormById(_this.state.currentProduct.form);case 6:if(_this.props.hasForm===true){_this.setState({showForm:true,showTable:false});}case 7:case\"end\":return _context.stop();}}},_callee);}));_this.handleAgentContact=function(){//TODO handle agent comunication\n_this.props.promptNotification('Contacto enviado al agente','success');};_this.handleFormBack=function(){_this.setState({showForm:false,showTable:true});};_this.handleFormSubmit=function(){//TO DO logic for sending the form in an email\n_this.handleFormBack();};_this.manager=[];_this.state={showTable:false,currentProduct:{},showForm:false};return _this;}_createClass(Product,[{key:\"componentDidMount\",value:function(){var _componentDidMount=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!this.props.params.insurance){_context2.next=5;break;}_context2.next=3;return this.props.getProductsByInsurance(this.props.params.insurance._id);case 3:_context2.next=7;break;case 5:_context2.next=7;return this.props.getAllProducts();case 7:_context2.next=9;return this.props.getAllBusiness();case 9:_context2.next=11;return this.props.getAllCovers();case 11:case\"end\":return _context2.stop();}}},_callee2,this);}));function componentDidMount(){return _componentDidMount.apply(this,arguments);}return componentDidMount;}()},{key:\"render\",value:function render(){this.buildProductManager();return/*#__PURE__*/React.createElement(Grid,{container:true,spacing:1},this.state.showTable===true?this.renderTable():this.state.showForm===true?this.renderForm():this.renderProducts());}}]);return Product;}(Component);var mapStateToProps=function mapStateToProps(state){return{products:state.product.products,businessList:state.business.businesses,covers:state.cover.covers,insurances:state.insurance.insurances,form:state.form.form,hasForm:state.form.hasForm};};var actions={getAllProducts:getAllProducts,getProductsByInsurance:getProductsByInsurance,getAllBusiness:getAllBusiness,getAllCovers:getAllCovers,getFormById:getFormById,clearForm:clearForm,promptNotification:promptNotification};export default connect(mapStateToProps,actions)(Product);","map":{"version":3,"sources":["/Users/manuel/Documents/CA/ca-fe/src/components/Content/Products.js"],"names":["React","Component","connect","Grid","ProductCard","ProductChart","Form","getAllProducts","getProductsByInsurance","getAllBusiness","getAllCovers","getFormById","clearForm","promptNotification","Product","props","buildProductManager","products","length","businessList","covers","insurances","manager","map","product","newProduct","Object","assign","business","find","_id","filter","cover","insurance","renderProducts","index","onSelectCard","renderTable","state","currentProduct","returnToProducts","openForm","handleAgentContact","renderForm","form","handleFormBack","setState","showTable","showForm","console","log","hasForm","handleFormSubmit","params","mapStateToProps","businesses","actions"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {Grid} from '@material-ui/core';\nimport ProductCard from './ProductCard';\nimport ProductChart from './ProductChart';\nimport Form from './../Form/Form';\nimport {getAllProducts, \n    getProductsByInsurance, \n    getAllBusiness, \n    getAllCovers,\n    getFormById, \n    clearForm, \n    promptNotification} from './../../actions';\n\nclass Product extends Component{\n    constructor(props){\n        super(props);\n        this.manager = [];\n        this.state = {\n            showTable: false,\n            currentProduct: {},\n            showForm: false\n        }\n    }\n\n    async componentDidMount(){\n        if(this.props.params.insurance){\n            await this.props.getProductsByInsurance(this.props.params.insurance._id);\n        }else{\n            await this.props.getAllProducts();\n        }\n        await this.props.getAllBusiness();\n        await this.props.getAllCovers();\n    }\n\n    render(){\n        this.buildProductManager();\n        return <Grid container spacing = {1}>\n            {this.state.showTable === true ? this.renderTable() : \n            ( this.state.showForm === true? this.renderForm() :\n            this.renderProducts()) }\n        </Grid>\n    }\n\n    buildProductManager = () => {\n        if(this.props.products.length === 0 || this.props.businessList.length === 0 \n            || this.props.covers.length === 0 || this.props.insurances.length === 0) return;\n        \n        this.manager = this.props.products.map(product => {\n            let newProduct = Object.assign({}, product);\n            newProduct.business = this.props.businessList.find(business => product.business === business._id);\n            newProduct.covers = this.props.covers.filter(cover => cover.product === product._id);\n            newProduct.insurance = this.props.insurances.find(insurance => insurance._id === product.insurance);\n            return newProduct;\n        });\n    }\n\n    renderProducts = () => {\n        return this.manager.map((product, index) => {\n            return <ProductCard product = {product} key = {index} onSelect = {this.onSelectCard}/>\n        })\n    }\n\n    renderTable = () => {\n        return <ProductChart \n                product = {this.state.currentProduct} \n                handleBack = {this.returnToProducts} \n                handleForm = {this.openForm} \n                handleAgent = {this.handleAgentContact}/>\n    }\n\n    renderForm = () => {\n        return <Form form = {this.props.form} parentForm = {true} handleBack = {this.handleFormBack}/>\n    }\n\n    returnToProducts = () => {\n        this.setState({currentProduct: {}, showTable: false, showForm: false});\n    }\n\n    onSelectCard = (currentProduct) => {\n        this.setState({currentProduct, showTable: true, showForm: false});\n    }\n\n    openForm = async () =>{\n        console.log(this.state.currentProduct);\n        if(!this.state.currentProduct.form){\n            this.props.promptNotification('Formulario no disponible', \"warning\");\n            return;\n        }\n\n        await this.props.getFormById(this.state.currentProduct.form);\n        if(this.props.hasForm === true){\n            this.setState({showForm: true, showTable: false})\n        }\n    }\n\n    handleAgentContact = () => {\n        //TODO handle agent comunication\n        this.props.promptNotification('Contacto enviado al agente', 'success');\n    }\n\n    handleFormBack = () => {\n        this.setState({showForm: false, showTable: true});\n    }\n\n    handleFormSubmit = () => {\n        //TO DO logic for sending the form in an email\n        this.handleFormBack();\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        products: state.product.products,\n        businessList: state.business.businesses, \n        covers: state.cover.covers, \n        insurances: state.insurance.insurances,\n        form: state.form.form,\n        hasForm: state.form.hasForm\n    }\n}\n\nconst actions = {getAllProducts, \n                getProductsByInsurance, \n                getAllBusiness, \n                getAllCovers, \n                getFormById, \n                clearForm, \n                promptNotification};\n\nexport default connect(mapStateToProps, actions)(Product);"]},"metadata":{},"sourceType":"module"}