{"ast":null,"code":"var _jsxFileName = \"/Users/manuel/Documents/CA/ca-fe/src/components/Content/ProductChart.js\";\nimport React, { Component } from 'react';\nimport { Grid, makeStyles } from '@material-ui/core';\nimport Card from '../Common/Card/Card';\nimport CardHeader from '../Common/Card/CardHeader';\nimport CardBody from '../Common/Card/CardBody';\nimport Table from '../Common/Table/Table';\nimport styles from \"./../../assets/jss/material-dashboard-react/views/dashboardStyle\";\nconst useStyles = makeStyles(styles);\n\nconst ProductChart = props => {\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    color: \"warning\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: classes.cardTitleWhite,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 21\n    }\n  }, props.product.business.name), /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.cardCategoryWhite,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 21\n    }\n  }, \"Pago anual de \", props.product.yearPayment, \" L.\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    tableHeaderColor: \"warning\",\n    tableHead: [\"#\", \"Cobertura\", \"Informacion\", \"Deducible\", \"Coaseguro\"],\n    tableData: getTableData(props.product.covers),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 21\n    }\n  }))));\n};\n\nconst getTableData = covers => {\n  return covers.map((cover, index) => {\n    return getRowData(cover, index);\n  });\n};\n\nconst getRowData = (cover, index) => {\n  let row = [];\n  row.push(index + 1);\n  row.push(cover.tile);\n  row.push(cover.content);\n  row.push(cover.type === 'deductible' ? cover.extraInfo : '-');\n  row.push(cover.type === 'coinsurance' ? cover.extraInfo : '-');\n  return row;\n};\n\nexport default ProductChart;","map":{"version":3,"sources":["/Users/manuel/Documents/CA/ca-fe/src/components/Content/ProductChart.js"],"names":["React","Component","Grid","makeStyles","Card","CardHeader","CardBody","Table","styles","useStyles","ProductChart","props","classes","cardTitleWhite","product","business","name","cardCategoryWhite","yearPayment","getTableData","covers","map","cover","index","getRowData","row","push","tile","content","type","extraInfo"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,IAAR,EAAcC,UAAd,QAA+B,mBAA/B;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AAEA,OAAOC,MAAP,MAAmB,kEAAnB;AAEA,MAAMC,SAAS,GAAGN,UAAU,CAACK,MAAD,CAA5B;;AAEA,MAAME,YAAY,GAAIC,KAAD,IAAW;AAC5B,QAAMC,OAAO,GAAGH,SAAS,EAAzB;AACA,sBAAO,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAEG,OAAO,CAACC,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwCF,KAAK,CAACG,OAAN,CAAcC,QAAd,CAAuBC,IAA/D,CADJ,eAEI;AAAG,IAAA,SAAS,EAAEJ,OAAO,CAACK,iBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACmBN,KAAK,CAACG,OAAN,CAAcI,WADjC,QAFJ,CADJ,eAOI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AACI,IAAA,gBAAgB,EAAC,SADrB;AAEI,IAAA,SAAS,EAAE,CAAC,GAAD,EAAM,WAAN,EAAmB,aAAnB,EAAkC,WAAlC,EAA+C,WAA/C,CAFf;AAGI,IAAA,SAAS,EAAEC,YAAY,CAACR,KAAK,CAACG,OAAN,CAAcM,MAAf,CAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAPJ,CADD,CAAP;AAiBH,CAnBD;;AAqBA,MAAMD,YAAY,GAAIC,MAAD,IAAY;AAC7B,SAAOA,MAAM,CAACC,GAAP,CAAW,CAACC,KAAD,EAAOC,KAAP,KAAiB;AAC/B,WAAOC,UAAU,CAACF,KAAD,EAAQC,KAAR,CAAjB;AACH,GAFM,CAAP;AAGH,CAJD;;AAMA,MAAMC,UAAU,GAAG,CAACF,KAAD,EAAQC,KAAR,KAAkB;AACjC,MAAIE,GAAG,GAAG,EAAV;AACAA,EAAAA,GAAG,CAACC,IAAJ,CAASH,KAAK,GAAC,CAAf;AACAE,EAAAA,GAAG,CAACC,IAAJ,CAASJ,KAAK,CAACK,IAAf;AACAF,EAAAA,GAAG,CAACC,IAAJ,CAASJ,KAAK,CAACM,OAAf;AACAH,EAAAA,GAAG,CAACC,IAAJ,CAASJ,KAAK,CAACO,IAAN,KAAe,YAAf,GAA8BP,KAAK,CAACQ,SAApC,GAAgD,GAAzD;AACAL,EAAAA,GAAG,CAACC,IAAJ,CAASJ,KAAK,CAACO,IAAN,KAAe,aAAf,GAA+BP,KAAK,CAACQ,SAArC,GAAgD,GAAzD;AACA,SAAOL,GAAP;AACH,CARD;;AAUA,eAAef,YAAf","sourcesContent":["import React, {Component} from 'react';\nimport {Grid, makeStyles} from '@material-ui/core';\nimport Card from '../Common/Card/Card';\nimport CardHeader from '../Common/Card/CardHeader';\nimport CardBody from '../Common/Card/CardBody';\nimport Table from '../Common/Table/Table';\n\nimport styles from \"./../../assets/jss/material-dashboard-react/views/dashboardStyle\";\n\nconst useStyles = makeStyles(styles);\n\nconst ProductChart = (props) => {\n    const classes = useStyles();\n    return <Grid item sm={12}>\n            <Card>\n                <CardHeader color=\"warning\">\n                    <h4 className={classes.cardTitleWhite}>{props.product.business.name}</h4>\n                    <p className={classes.cardCategoryWhite}>\n                        Pago anual de {props.product.yearPayment} L.\n                    </p>\n                </CardHeader>\n                <CardBody>\n                    <Table\n                        tableHeaderColor=\"warning\"\n                        tableHead={[\"#\", \"Cobertura\", \"Informacion\", \"Deducible\", \"Coaseguro\"]}\n                        tableData={getTableData(props.product.covers)}\n                    />\n                </CardBody>\n            </Card>\n        </Grid>\n}\n\nconst getTableData = (covers) => {\n    return covers.map((cover,index) => {\n        return getRowData(cover, index);\n    })\n}\n\nconst getRowData = (cover, index) => {\n    let row = [];\n    row.push(index+1);\n    row.push(cover.tile);\n    row.push(cover.content);\n    row.push(cover.type === 'deductible' ? cover.extraInfo : '-');\n    row.push(cover.type === 'coinsurance' ? cover.extraInfo: '-');\n    return row;\n}\n\nexport default ProductChart;"]},"metadata":{},"sourceType":"module"}