{"ast":null,"code":"var _jsxFileName = \"/Users/manuel/Documents/CA/ca-fe/src/components/LogIn/Form.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Card from \"../Common/Card/Card\";\nimport CardHeader from \"../Common/Card/CardHeader\";\nimport CardBody from \"../Common/Card/CardBody\";\nimport Button from \"../Common/CustomButtons/Button.js\";\nimport CustomInput from \"../Common/CustomInput/CustomInput.js\";\nimport { logIn, changePath, promptNotification } from '../../actions';\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onUsernameChange = event => {\n      const {\n        value\n      } = event.target;\n      const usernameRegex = /^[a-zA-Z0-9-!_]{5,}$/;\n      const isValid = usernameRegex.test(value);\n      this.setState({\n        username: value,\n        isValidUsername: !isValid\n      });\n    };\n\n    this.onPasswordChange = event => {\n      const {\n        value\n      } = event.target;\n      const passwordRegex = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}$/;\n      const isValid = passwordRegex.test(value);\n      this.setState({\n        password: event.target.value,\n        isValidPassword: !isValid\n      });\n    };\n\n    this.onSubmit = async () => {\n      await this.props.logIn(this.state.username, this.state.password);\n\n      if (this.props.isAuth === true) {\n        this.props.promptNotification('Bienvenido!!!', 'success');\n        this.props.changePath('home');\n      } else {\n        this.setState({\n          username: '',\n          password: ''\n        });\n      }\n    };\n\n    this.state = {\n      username: '',\n      password: '',\n      isValidUsername: false,\n      isValidPassword: false\n    };\n  }\n\n  render() {\n    const {\n      isValidUsername,\n      isValidPassword\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Card, {\n      className: \"bg-secondary shadow border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      className: \"bg-transparent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"btn-wrapper text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"btn-inner--icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"...\",\n      src: \"/images/login/loginIcon.jpg\",\n      width: \"70%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 29\n      }\n    })))), /*#__PURE__*/React.createElement(CardBody, {\n      className: \"px-lg-5 pb-lg-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center text-muted mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(CustomInput, {\n      labelText: \"Usuario\",\n      id: \"email-address\",\n      error: isValidUsername,\n      inputProps: {\n        value: this.state.username,\n        onChange: this.onUsernameChange\n      },\n      formControlProps: {\n        fullWidth: true\n      },\n      inputIcon: /*#__PURE__*/React.createElement(\"i\", {\n        style: {\n          color: '#929292',\n          fontSize: '15px',\n          marginRight: '10px'\n        },\n        className: \"fas fa-envelope\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 44\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 29\n      }\n    }), isValidUsername ? /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        fontSize: '11px',\n        color: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 51\n      }\n    }, \"Nombre de usuario invalido\") : ''), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(CustomInput, {\n      labelText: \"Contrase\\xF1a\",\n      inputProps: {\n        type: \"password\",\n        value: this.state.password,\n        onChange: this.onPasswordChange\n      },\n      autoComplete: \"current-password\",\n      id: \"password\",\n      error: isValidPassword,\n      formControlProps: {\n        fullWidth: true\n      },\n      inputIcon: /*#__PURE__*/React.createElement(\"i\", {\n        style: {\n          color: '#929292',\n          fontSize: '15px',\n          marginRight: '10px'\n        },\n        className: \"fas fa-unlock\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 44\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 29\n      }\n    }), isValidPassword ? /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        fontSize: '11px',\n        color: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 51\n      }\n    }, \"Contrase\\xF1a Invalida\") : ''), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"custom-control custom-control-alternative custom-checkbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"custom-control-input\",\n      id: \" customCheckLogin\",\n      type: \"checkbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      disabled: isValidUsername || isValidPassword,\n      className: \"my-2\",\n      color: \"primary\",\n      type: \"button\",\n      onClick: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 29\n      }\n    }, \"Iniciar Sesi\\xF3n\")))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuth: state.user.isAuth\n  };\n};\n\nexport default connect(mapStateToProps, {\n  logIn,\n  changePath,\n  promptNotification\n})(Form);","map":{"version":3,"sources":["/Users/manuel/Documents/CA/ca-fe/src/components/LogIn/Form.js"],"names":["React","Component","connect","Card","CardHeader","CardBody","Button","CustomInput","logIn","changePath","promptNotification","Form","constructor","props","onUsernameChange","event","value","target","usernameRegex","isValid","test","setState","username","isValidUsername","onPasswordChange","passwordRegex","password","isValidPassword","onSubmit","state","isAuth","render","onChange","fullWidth","color","fontSize","marginRight","type","mapStateToProps","user"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Card from \"../Common/Card/Card\";\nimport CardHeader from \"../Common/Card/CardHeader\";\nimport CardBody from \"../Common/Card/CardBody\";\nimport Button from \"../Common/CustomButtons/Button.js\";\nimport CustomInput from \"../Common/CustomInput/CustomInput.js\";\nimport { logIn, changePath, promptNotification } from '../../actions';\n\n\n\nclass Form extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            password: '',\n            isValidUsername: false,\n            isValidPassword: false,\n        }\n    }\n\n    render() {\n        const { isValidUsername, isValidPassword } = this.state;\n        return (\n            <Card className=\"bg-secondary shadow border-0\">\n                <CardHeader className=\"bg-transparent\">\n                    <div className=\"btn-wrapper text-center\">\n\n                        <span className=\"btn-inner--icon\">\n                            <img\n                                alt=\"...\"\n                                src=\"/images/login/loginIcon.jpg\"\n                                width='70%'\n                            />\n                        </span>\n                    </div>\n                </CardHeader>\n                <CardBody className=\"px-lg-5 pb-lg-5\">\n                    <div className=\"text-center text-muted mb-4\">\n                    </div>\n                    <form>\n                        <div className=\"form-group\">\n                            <CustomInput\n                                labelText=\"Usuario\"\n                                id=\"email-address\"\n                                error={isValidUsername}\n                                inputProps={{\n                                    value: this.state.username,\n                                    onChange: this.onUsernameChange\n                                }}\n                                formControlProps={{\n                                    fullWidth: true\n                                }}\n                                inputIcon={<i style={{ color: '#929292', fontSize: '15px', marginRight: '10px' }} className=\"fas fa-envelope\"></i>}\n                            />\n                            {\n                                isValidUsername ? <p style={{\n                                    fontSize: '11px',\n                                    color: 'red'\n                                }}>Nombre de usuario invalido</p> : ''\n                            }\n                        </div>\n                        <div className=\"form-group\">\n                            <CustomInput\n                                labelText=\"Contraseña\"\n                                inputProps={{\n                                    type: \"password\",\n                                    value: this.state.password,\n                                    onChange: this.onPasswordChange\n                                }}\n                                autoComplete=\"current-password\"\n                                id=\"password\"\n                                error={isValidPassword}\n                                formControlProps={{\n                                    fullWidth: true\n                                }}\n                                inputIcon={<i style={{ color: '#929292', fontSize: '15px', marginRight: '10px' }} className=\"fas fa-unlock\"></i>}\n                            />\n                            {\n                                isValidPassword ? <p style={{\n                                    fontSize: '11px',\n                                    color: 'red'\n                                }}>Contraseña Invalida</p> : ''\n                            }\n                        </div>\n                        <div className=\"custom-control custom-control-alternative custom-checkbox\">\n                            <input\n                                className=\"custom-control-input\"\n                                id=\" customCheckLogin\"\n                                type=\"checkbox\"\n                            />\n                        </div>\n                        <div className=\"text-center\">\n                            <Button disabled={(isValidUsername || isValidPassword)} className=\"my-2\" color=\"primary\" type=\"button\" onClick={this.onSubmit}>\n                                Iniciar Sesión\n                            </Button>\n                        </div>\n                    </form>\n                </CardBody>\n            </Card>\n        );\n    }\n\n    onUsernameChange = event => {\n        const { value } = event.target\n        const usernameRegex = /^[a-zA-Z0-9-!_]{5,}$/\n        const isValid = usernameRegex.test(value)\n        this.setState({\n            username: value,\n            isValidUsername: !isValid\n        });\n    }\n\n    onPasswordChange = event => {\n        const { value } = event.target;\n        const passwordRegex = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}$/\n        const isValid = passwordRegex.test(value)\n        this.setState({ \n            password: event.target.value,\n            isValidPassword: !isValid,\n        });\n    }\n\n    onSubmit = async () => {\n        await this.props.logIn(this.state.username, this.state.password);\n        if (this.props.isAuth === true) {\n            this.props.promptNotification('Bienvenido!!!', 'success');\n            this.props.changePath('home');\n        } else {\n            this.setState({ username: '', password: '' });\n        }\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuth: state.user.isAuth\n    }\n}\n\nexport default connect(mapStateToProps, { logIn, changePath, promptNotification })(Form);"]},"metadata":{},"sourceType":"module"}