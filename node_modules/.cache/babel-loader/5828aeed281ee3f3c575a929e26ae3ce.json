{"ast":null,"code":"var _jsxFileName = \"/Users/manuel/Documents/CA/ca-fe/src/components/Form/CheckBoxInput.js\";\nimport React, { Component } from 'react';\nimport { FormControl, FormGroup, FormControlLabel, Checkbox } from '@material-ui/core';\n\nclass CheckBoxInput extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      let {\n        checked\n      } = event.target;\n      this.storeQuestion(checked);\n      this.setState({\n        checked\n      });\n    };\n\n    this.storeQuestion = checked => {\n      let completedAnswer = {\n        question: this.props.question.question,\n        checked\n      };\n      this.props.onStateChange(completedAnswer, this.props.index);\n    };\n\n    this.state = {\n      checked: false\n    };\n  }\n\n  componentDidMount() {\n    this.storeQuestion(this.state.checked);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(FormControl, {\n      component: \"fieldset\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormControlLabel, {\n      control: /*#__PURE__*/React.createElement(Checkbox, {\n        checked: this.state.checked,\n        onChange: this.handleChange,\n        name: \"check\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 42\n        }\n      }),\n      label: this.props.question.question,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 29\n      }\n    })));\n  }\n\n}\n\nexport default CheckBoxInput;","map":{"version":3,"sources":["/Users/manuel/Documents/CA/ca-fe/src/components/Form/CheckBoxInput.js"],"names":["React","Component","FormControl","FormGroup","FormControlLabel","Checkbox","CheckBoxInput","constructor","props","handleChange","event","checked","target","storeQuestion","setState","completedAnswer","question","onStateChange","index","state","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,WAAR,EAAqBC,SAArB,EAAgCC,gBAAhC,EAAkDC,QAAlD,QAAiE,mBAAjE;;AAEA,MAAMC,aAAN,SAA4BL,SAA5B,CAAqC;AACjCM,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAWlBC,YAXkB,GAWFC,KAAD,IAAW;AACtB,UAAI;AAACC,QAAAA;AAAD,UAAYD,KAAK,CAACE,MAAtB;AACA,WAAKC,aAAL,CAAmBF,OAAnB;AACA,WAAKG,QAAL,CAAc;AAACH,QAAAA;AAAD,OAAd;AACH,KAfiB;;AAAA,SA4BlBE,aA5BkB,GA4BDF,OAAD,IAAa;AACzB,UAAII,eAAe,GAAG;AAClBC,QAAAA,QAAQ,EAAE,KAAKR,KAAL,CAAWQ,QAAX,CAAoBA,QADZ;AAElBL,QAAAA;AAFkB,OAAtB;AAIA,WAAKH,KAAL,CAAWS,aAAX,CAAyBF,eAAzB,EAA0C,KAAKP,KAAL,CAAWU,KAArD;AACH,KAlCiB;;AAEd,SAAKC,KAAL,GAAa;AACTR,MAAAA,OAAO,EAAE;AADA,KAAb;AAGH;;AAEDS,EAAAA,iBAAiB,GAAE;AACf,SAAKP,aAAL,CAAmB,KAAKM,KAAL,CAAWR,OAA9B;AACH;;AAQDU,EAAAA,MAAM,GAAE;AACJ,wBAAO,oBAAC,WAAD;AAAa,MAAA,SAAS,EAAC,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACS,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,gBAAD;AACI,MAAA,OAAO,eAAE,oBAAC,QAAD;AAAU,QAAA,OAAO,EAAE,KAAKF,KAAL,CAAWR,OAA9B;AAAuC,QAAA,QAAQ,EAAE,KAAKF,YAAtD;AAAoE,QAAA,IAAI,EAAC,OAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADb;AAEI,MAAA,KAAK,EAAE,KAAKD,KAAL,CAAWQ,QAAX,CAAoBA,QAF/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADT,CAAP;AAQH;;AA3BgC;;AAsCrC,eAAeV,aAAf","sourcesContent":["import React, {Component} from 'react';\nimport {FormControl, FormGroup, FormControlLabel, Checkbox} from '@material-ui/core';\n\nclass CheckBoxInput extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            checked: false\n        }\n    }\n\n    componentDidMount(){\n        this.storeQuestion(this.state.checked);\n    }\n\n    handleChange = (event) => {\n        let {checked} = event.target;\n        this.storeQuestion(checked);\n        this.setState({checked});\n    }\n\n    render(){\n        return <FormControl component=\"fieldset\">\n                        <FormGroup>\n                            <FormControlLabel\n                                control={<Checkbox checked={this.state.checked} onChange={this.handleChange} name=\"check\" />}\n                                label={this.props.question.question}\n                            />\n                        </FormGroup>\n                </FormControl>\n    }\n\n    storeQuestion = (checked) => {\n        let completedAnswer = {\n            question: this.props.question.question, \n            checked\n        }\n        this.props.onStateChange(completedAnswer, this.props.index);\n    }\n}\n\nexport default CheckBoxInput;"]},"metadata":{},"sourceType":"module"}