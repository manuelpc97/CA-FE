{"ast":null,"code":"var _jsxFileName = \"/Users/manuel/Documents/CA/ca-fe/src/components/Form/TextInput.js\";\nimport React, { Component } from 'react';\nimport CustomInput from '../Common/CustomInput/CustomInput';\n\nclass TextInput extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onValueChange = event => {\n      let {\n        value\n      } = event.target;\n      this.setState({\n        value\n      });\n    };\n\n    this.getInputType = () => {\n      return this.props.question.inputType.type === 'alphanumeric' ? 'text' : this.props.question.inputType.type;\n    };\n\n    this.storeQuestion = () => {\n      completedQuestion = {\n        question: this.props.question.question,\n        answer: this.state.value\n      };\n      this.props.onStateChange(completedQuestion, this.props.index);\n    };\n\n    this.state = {\n      value: ''\n    };\n  }\n\n  componentDidMount() {\n    this.storeQuestion();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(CustomInput, {\n      labelText: this.props.question.question,\n      inputProps: {\n        value: this.state.value,\n        onChange: this.onValueChange,\n        type: this.getInputType(),\n        multiline: this.props.question.inputType.tag === 'textarea',\n        rows: this.props.question.inputType.tag === 'textarea' ? 5 : 1\n      },\n      formControlProps: {\n        fullWidth: true\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 16\n      }\n    });\n  }\n\n}\n\nexport default TextInput;","map":{"version":3,"sources":["/Users/manuel/Documents/CA/ca-fe/src/components/Form/TextInput.js"],"names":["React","Component","CustomInput","TextInput","constructor","props","onValueChange","event","value","target","setState","getInputType","question","inputType","type","storeQuestion","completedQuestion","answer","state","onStateChange","index","componentDidMount","render","onChange","multiline","tag","rows","fullWidth"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,WAAP,MAAwB,mCAAxB;;AAGA,MAAMC,SAAN,SAAwBF,SAAxB,CAAiC;AAC7BG,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAWlBC,aAXkB,GAWDC,KAAD,IAAW;AACvB,UAAI;AAACC,QAAAA;AAAD,UAAUD,KAAK,CAACE,MAApB;AACA,WAAKC,QAAL,CAAc;AAACF,QAAAA;AAAD,OAAd;AACH,KAdiB;;AAAA,SAgBlBG,YAhBkB,GAgBH,MAAM;AACjB,aAAO,KAAKN,KAAL,CAAWO,QAAX,CAAoBC,SAApB,CAA8BC,IAA9B,KAAuC,cAAvC,GAAwD,MAAxD,GAAiE,KAAKT,KAAL,CAAWO,QAAX,CAAoBC,SAApB,CAA8BC,IAAtG;AACH,KAlBiB;;AAAA,SAoClBC,aApCkB,GAoCF,MAAM;AAClBC,MAAAA,iBAAiB,GAAG;AAChBJ,QAAAA,QAAQ,EAAE,KAAKP,KAAL,CAAWO,QAAX,CAAoBA,QADd;AAEhBK,QAAAA,MAAM,EAAE,KAAKC,KAAL,CAAWV;AAFH,OAApB;AAKA,WAAKH,KAAL,CAAWc,aAAX,CAAyBH,iBAAzB,EAA4C,KAAKX,KAAL,CAAWe,KAAvD;AACH,KA3CiB;;AAEd,SAAKF,KAAL,GAAa;AACTV,MAAAA,KAAK,EAAE;AADE,KAAb;AAGH;;AAEDa,EAAAA,iBAAiB,GAAE;AACf,SAAKN,aAAL;AACH;;AAWDO,EAAAA,MAAM,GAAE;AACJ,wBAAO,oBAAC,WAAD;AACH,MAAA,SAAS,EAAI,KAAKjB,KAAL,CAAWO,QAAX,CAAoBA,QAD9B;AAEH,MAAA,UAAU,EAAI;AACVJ,QAAAA,KAAK,EAAE,KAAKU,KAAL,CAAWV,KADR;AAEVe,QAAAA,QAAQ,EAAE,KAAKjB,aAFL;AAGVQ,QAAAA,IAAI,EAAE,KAAKH,YAAL,EAHI;AAIVa,QAAAA,SAAS,EAAE,KAAKnB,KAAL,CAAWO,QAAX,CAAoBC,SAApB,CAA8BY,GAA9B,KAAsC,UAJvC;AAKVC,QAAAA,IAAI,EAAE,KAAKrB,KAAL,CAAWO,QAAX,CAAoBC,SAApB,CAA8BY,GAA9B,KAAsC,UAAtC,GAAmD,CAAnD,GAAuD;AALnD,OAFX;AASH,MAAA,gBAAgB,EAAE;AACdE,QAAAA,SAAS,EAAE;AADG,OATf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAaH;;AAnC4B;;AA+CjC,eAAexB,SAAf","sourcesContent":["import React, {Component} from 'react';\nimport CustomInput from '../Common/CustomInput/CustomInput';\n\n\nclass TextInput extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            value: ''\n        }\n    }\n\n    componentDidMount(){\n        this.storeQuestion();\n    }\n\n    onValueChange = (event) => {\n        let {value} = event.target;\n        this.setState({value});\n    }\n\n    getInputType = () => {\n        return this.props.question.inputType.type === 'alphanumeric' ? 'text' : this.props.question.inputType.type;\n    }\n\n    render(){\n        return <CustomInput\n            labelText = {this.props.question.question}\n            inputProps = {{\n                value: this.state.value,\n                onChange: this.onValueChange, \n                type: this.getInputType(),\n                multiline: this.props.question.inputType.tag === 'textarea',\n                rows: this.props.question.inputType.tag === 'textarea' ? 5 : 1\n            }}\n            formControlProps={{\n                fullWidth: true\n            }}\n        />;\n    }\n\n    storeQuestion = () => {\n        completedQuestion = {\n            question: this.props.question.question,\n            answer: this.state.value\n        }\n\n        this.props.onStateChange(completedQuestion, this.props.index);\n    }\n}\n\nexport default TextInput;"]},"metadata":{},"sourceType":"module"}