{"ast":null,"code":"var _jsxFileName = \"/Users/manuel/Documents/CA/ca-fe/src/components/Content/Products.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Grid } from '@material-ui/core';\nimport ProductCard from './ProductCard';\nimport ProductChart from './ProductChart';\nimport Form from './../Form/Form';\nimport { getAllProducts, getProductsByInsurance, getAllBusiness, getAllCovers, getFormById, clearForm, promptNotification } from './../../actions';\n\nclass Product extends Component {\n  constructor(props) {\n    super(props);\n\n    this.buildProductManager = () => {\n      if (this.props.products.length === 0 || this.props.businessList.length === 0 || this.props.covers.length === 0 || this.props.insurances.length === 0) return;\n      this.manager = this.props.products.map(product => {\n        let newProduct = Object.assign({}, product);\n        newProduct.business = this.props.businessList.find(business => product.business === business._id);\n        newProduct.covers = this.props.covers.filter(cover => cover.product === product._id);\n        newProduct.insurance = this.props.insurances.find(insurance => insurance._id === product.insurance);\n        return newProduct;\n      });\n    };\n\n    this.renderProducts = () => {\n      return this.manager.map((product, index) => {\n        return /*#__PURE__*/React.createElement(ProductCard, {\n          product: product,\n          key: index,\n          onSelect: this.onSelectCard,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 20\n          }\n        });\n      });\n    };\n\n    this.renderTable = () => {\n      return /*#__PURE__*/React.createElement(ProductChart, {\n        product: this.state.currentProduct,\n        handleBack: this.returnToProducts,\n        handleForm: this.openForm,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 16\n        }\n      });\n    };\n\n    this.renderForm = () => {\n      return /*#__PURE__*/React.createElement(Form, {\n        form: this.props.form,\n        parentForm: true,\n        handleBack: this.handleFormBack,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 16\n        }\n      });\n    };\n\n    this.returnToProducts = () => {\n      this.setState({\n        currentProduct: {},\n        showTable: false,\n        showForm: false\n      });\n    };\n\n    this.onSelectCard = currentProduct => {\n      this.setState({\n        currentProduct,\n        showTable: true,\n        showForm: false\n      });\n    };\n\n    this.openForm = async () => {\n      console.log(this.state.currentProduct);\n\n      if (!this.state.currentProduct.form) {\n        this.props.promptNotification('Formulario no disponible', \"warning\");\n        return;\n      }\n\n      await this.props.getFormById(this.state.currentProduct.form);\n\n      if (this.props.hasForm === true) {\n        this.setState({\n          showForm: true,\n          showTable: false\n        });\n      }\n    };\n\n    this.handleAgentContact = () => {\n      //TODO handle agent comunication\n      this.props.promptNotification('Contacto enviado al agente', 'success');\n    };\n\n    this.handleFormBack = () => {\n      this.setState({\n        showForm: false,\n        showTable: true\n      });\n    };\n\n    this.manager = [];\n    this.state = {\n      showTable: false,\n      currentProduct: {},\n      showForm: false\n    };\n  }\n\n  async componentDidMount() {\n    if (this.props.params.insurance) {\n      await this.props.getProductsByInsurance(this.props.params.insurance._id);\n    } else {\n      await this.props.getAllProducts();\n    }\n\n    await this.props.getAllBusiness();\n    await this.props.getAllCovers();\n  }\n\n  render() {\n    this.buildProductManager();\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 16\n      }\n    }, this.state.showTable === true ? this.renderTable() : this.state.showForm === true ? this.renderForm() : this.renderProducts());\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    products: state.product.products,\n    businessList: state.business.businesses,\n    covers: state.cover.covers,\n    insurances: state.insurance.insurances,\n    form: state.form.form,\n    hasForm: state.form.hasForm\n  };\n};\n\nconst actions = {\n  getAllProducts,\n  getProductsByInsurance,\n  getAllBusiness,\n  getAllCovers,\n  getFormById,\n  clearForm,\n  promptNotification\n};\nexport default connect(mapStateToProps, actions)(Product);","map":{"version":3,"sources":["/Users/manuel/Documents/CA/ca-fe/src/components/Content/Products.js"],"names":["React","Component","connect","Grid","ProductCard","ProductChart","Form","getAllProducts","getProductsByInsurance","getAllBusiness","getAllCovers","getFormById","clearForm","promptNotification","Product","constructor","props","buildProductManager","products","length","businessList","covers","insurances","manager","map","product","newProduct","Object","assign","business","find","_id","filter","cover","insurance","renderProducts","index","onSelectCard","renderTable","state","currentProduct","returnToProducts","openForm","renderForm","form","handleFormBack","setState","showTable","showForm","console","log","hasForm","handleAgentContact","componentDidMount","params","render","mapStateToProps","businesses","actions"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {Grid} from '@material-ui/core';\nimport ProductCard from './ProductCard';\nimport ProductChart from './ProductChart';\nimport Form from './../Form/Form';\nimport {getAllProducts, \n    getProductsByInsurance, \n    getAllBusiness, \n    getAllCovers,\n    getFormById, \n    clearForm, \n    promptNotification} from './../../actions';\n\nclass Product extends Component{\n    constructor(props){\n        super(props);\n        this.manager = [];\n        this.state = {\n            showTable: false,\n            currentProduct: {},\n            showForm: false\n        }\n    }\n\n    async componentDidMount(){\n        if(this.props.params.insurance){\n            await this.props.getProductsByInsurance(this.props.params.insurance._id);\n        }else{\n            await this.props.getAllProducts();\n        }\n        await this.props.getAllBusiness();\n        await this.props.getAllCovers();\n    }\n\n    render(){\n        this.buildProductManager();\n        return <Grid container spacing = {1}>\n            {this.state.showTable === true ? this.renderTable() : \n            ( this.state.showForm === true? this.renderForm() :\n            this.renderProducts()) }\n        </Grid>\n    }\n\n    buildProductManager = () => {\n        if(this.props.products.length === 0 || this.props.businessList.length === 0 \n            || this.props.covers.length === 0 || this.props.insurances.length === 0) return;\n        \n        this.manager = this.props.products.map(product => {\n            let newProduct = Object.assign({}, product);\n            newProduct.business = this.props.businessList.find(business => product.business === business._id);\n            newProduct.covers = this.props.covers.filter(cover => cover.product === product._id);\n            newProduct.insurance = this.props.insurances.find(insurance => insurance._id === product.insurance);\n            return newProduct;\n        });\n    }\n\n    renderProducts = () => {\n        return this.manager.map((product, index) => {\n            return <ProductCard product = {product} key = {index} onSelect = {this.onSelectCard}/>\n        })\n    }\n\n    renderTable = () => {\n        return <ProductChart product = {this.state.currentProduct} handleBack = {this.returnToProducts} handleForm = {this.openForm}/>\n    }\n\n    renderForm = () => {\n        return <Form form = {this.props.form} parentForm = {true} handleBack = {this.handleFormBack}/>\n    }\n\n    returnToProducts = () => {\n        this.setState({currentProduct: {}, showTable: false, showForm: false});\n    }\n\n    onSelectCard = (currentProduct) => {\n        this.setState({currentProduct, showTable: true, showForm: false});\n    }\n\n    openForm = async () =>{\n        console.log(this.state.currentProduct);\n        if(!this.state.currentProduct.form){\n            this.props.promptNotification('Formulario no disponible', \"warning\");\n            return;\n        }\n\n        await this.props.getFormById(this.state.currentProduct.form);\n        if(this.props.hasForm === true){\n            this.setState({showForm: true, showTable: false})\n        }\n    }\n\n    handleAgentContact = () => {\n        //TODO handle agent comunication\n        this.props.promptNotification('Contacto enviado al agente', 'success');\n    }\n\n    handleFormBack = () => {\n        this.setState({showForm: false, showTable: true});\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        products: state.product.products,\n        businessList: state.business.businesses, \n        covers: state.cover.covers, \n        insurances: state.insurance.insurances,\n        form: state.form.form,\n        hasForm: state.form.hasForm\n    }\n}\n\nconst actions = {getAllProducts, \n                getProductsByInsurance, \n                getAllBusiness, \n                getAllCovers, \n                getFormById, \n                clearForm, \n                promptNotification};\n\nexport default connect(mapStateToProps, actions)(Product);"]},"metadata":{},"sourceType":"module"}