{"ast":null,"code":"var _jsxFileName = \"/Users/manuel/Documents/CA/ca-fe/src/components/Content/Products.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getAllProducts, getProductsByInsurance, getAllBusiness, getAllCovers } from './../../actions';\n\nclass Product extends Component {\n  constructor(props) {\n    super(props);\n\n    this.buildProductManager = () => {\n      if (this.props.products.length === 0 || this.props.businessList.length === 0) return;\n      this.manager = this.props.products.map(product => {\n        let newProduct = Object.assign({}, product);\n        newProduct.business = this.props.businessList.find(business => product.business === business._id);\n        newProduct.covers = this.props.covers.filter(cover => cover.product === product._id);\n        return newProduct;\n      });\n      console.log('MANUELITO THIS IS THE MANAGER: ', this.manager);\n    };\n\n    this.manager = [];\n  }\n\n  async componentDidMount() {\n    if (this.props.params.insurance) {\n      await this.props.getProductsByInsurance(this.props.params.insurance._id);\n    } else {\n      await this.props.getAllProducts();\n    }\n\n    await this.props.getAllBusiness();\n    await this.props.getAllCovers();\n  }\n\n  render() {\n    this.buildProductManager();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 16\n      }\n    }, \"PRODUCTS\");\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    products: state.product.products,\n    businessList: state.business.businesses,\n    covers: state.cover.covers\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getAllProducts,\n  getProductsByInsurance,\n  getAllBusiness,\n  getAllCovers\n})(Product);","map":{"version":3,"sources":["/Users/manuel/Documents/CA/ca-fe/src/components/Content/Products.js"],"names":["React","Component","connect","getAllProducts","getProductsByInsurance","getAllBusiness","getAllCovers","Product","constructor","props","buildProductManager","products","length","businessList","manager","map","product","newProduct","Object","assign","business","find","_id","covers","filter","cover","console","log","componentDidMount","params","insurance","render","mapStateToProps","state","businesses"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,cAAR,EAAwBC,sBAAxB,EAAgDC,cAAhD,EAAgEC,YAAhE,QAAmF,iBAAnF;;AAEA,MAAMC,OAAN,SAAsBN,SAAtB,CAA+B;AAC3BO,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAoBlBC,mBApBkB,GAoBI,MAAM;AACxB,UAAG,KAAKD,KAAL,CAAWE,QAAX,CAAoBC,MAApB,KAA+B,CAA/B,IAAoC,KAAKH,KAAL,CAAWI,YAAX,CAAwBD,MAAxB,KAAmC,CAA1E,EAA6E;AAE7E,WAAKE,OAAL,GAAe,KAAKL,KAAL,CAAWE,QAAX,CAAoBI,GAApB,CAAwBC,OAAO,IAAI;AAC9C,YAAIC,UAAU,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,OAAlB,CAAjB;AACAC,QAAAA,UAAU,CAACG,QAAX,GAAsB,KAAKX,KAAL,CAAWI,YAAX,CAAwBQ,IAAxB,CAA6BD,QAAQ,IAAIJ,OAAO,CAACI,QAAR,KAAqBA,QAAQ,CAACE,GAAvE,CAAtB;AACAL,QAAAA,UAAU,CAACM,MAAX,GAAoB,KAAKd,KAAL,CAAWc,MAAX,CAAkBC,MAAlB,CAAyBC,KAAK,IAAIA,KAAK,CAACT,OAAN,KAAkBA,OAAO,CAACM,GAA5D,CAApB;AACA,eAAOL,UAAP;AACH,OALc,CAAf;AAMAS,MAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ,EAA+C,KAAKb,OAApD;AACH,KA9BiB;;AAEd,SAAKA,OAAL,GAAe,EAAf;AACH;;AAED,QAAMc,iBAAN,GAAyB;AACrB,QAAG,KAAKnB,KAAL,CAAWoB,MAAX,CAAkBC,SAArB,EAA+B;AAC3B,YAAM,KAAKrB,KAAL,CAAWL,sBAAX,CAAkC,KAAKK,KAAL,CAAWoB,MAAX,CAAkBC,SAAlB,CAA4BR,GAA9D,CAAN;AACH,KAFD,MAEK;AACD,YAAM,KAAKb,KAAL,CAAWN,cAAX,EAAN;AACH;;AACD,UAAM,KAAKM,KAAL,CAAWJ,cAAX,EAAN;AACA,UAAM,KAAKI,KAAL,CAAWH,YAAX,EAAN;AACH;;AAEDyB,EAAAA,MAAM,GAAE;AACJ,SAAKrB,mBAAL;AACA,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACH;;AAnB0B;;AAkC/B,MAAMsB,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHtB,IAAAA,QAAQ,EAAEsB,KAAK,CAACjB,OAAN,CAAcL,QADrB;AAEHE,IAAAA,YAAY,EAAEoB,KAAK,CAACb,QAAN,CAAec,UAF1B;AAGHX,IAAAA,MAAM,EAAEU,KAAK,CAACR,KAAN,CAAYF;AAHjB,GAAP;AAKH,CAND;;AAQA,eAAerB,OAAO,CAAC8B,eAAD,EAAkB;AAAC7B,EAAAA,cAAD;AAAiBC,EAAAA,sBAAjB;AAAyCC,EAAAA,cAAzC;AAAyDC,EAAAA;AAAzD,CAAlB,CAAP,CAAiGC,OAAjG,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {getAllProducts, getProductsByInsurance, getAllBusiness, getAllCovers} from './../../actions';\n\nclass Product extends Component{\n    constructor(props){\n        super(props);\n        this.manager = [];\n    }\n\n    async componentDidMount(){\n        if(this.props.params.insurance){\n            await this.props.getProductsByInsurance(this.props.params.insurance._id);\n        }else{\n            await this.props.getAllProducts();\n        }\n        await this.props.getAllBusiness();\n        await this.props.getAllCovers();\n    }\n\n    render(){\n        this.buildProductManager();\n        return <div>PRODUCTS</div>\n    }\n\n    buildProductManager = () => {\n        if(this.props.products.length === 0 || this.props.businessList.length === 0) return;\n        \n        this.manager = this.props.products.map(product => {\n            let newProduct = Object.assign({}, product);\n            newProduct.business = this.props.businessList.find(business => product.business === business._id);\n            newProduct.covers = this.props.covers.filter(cover => cover.product === product._id);\n            return newProduct;\n        });\n        console.log('MANUELITO THIS IS THE MANAGER: ', this.manager);\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        products: state.product.products,\n        businessList: state.business.businesses, \n        covers: state.cover.covers\n    }\n}\n\nexport default connect(mapStateToProps, {getAllProducts, getProductsByInsurance, getAllBusiness, getAllCovers})(Product);"]},"metadata":{},"sourceType":"module"}