{"ast":null,"code":"var _jsxFileName = \"/Users/manuel/Documents/CA/ca-fe/src/components/Form/SelectInput.js\";\nimport React, { Component } from 'react';\nimport Form from './Form';\nimport { FormLabel, Select, MenuItem, FormControl } from '@material-ui/core';\n\nclass SelectInput extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.handleOpen = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleChange = event => {\n      let {\n        value\n      } = event.target;\n      this.storeQuestion(value);\n      this.setState({\n        value\n      });\n    };\n\n    this.renderOptions = () => {\n      return this.props.question.inputType.options.map((option, index) => {\n        return /*#__PURE__*/React.createElement(MenuItem, {\n          value: option,\n          key: 's' + index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 20\n          }\n        }, option);\n      });\n    };\n\n    this.subquestionsExist = key => {\n      if (!this.props.question.inputType.subquestions) return false;\n      if (!this.props.question.inputType.subquestions[key]) return false;\n      if (this.props.question.inputType.subquestions[key].length === 0) return false;\n      return true;\n    };\n\n    this.renderSubQuestions = key => {\n      this.hasSubquestions = this.subquestionsExist(key);\n      if (this.hasSubquestions === false) return null;\n      return /*#__PURE__*/React.createElement(Form, {\n        form: {\n          questions: this.props.question.inputType.subquestions[key]\n        },\n        subform: true,\n        onStateChange: this.handleStateChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 16\n        }\n      });\n    };\n\n    this.storeQuestion = answer => {\n      this.hasSubquestions = this.subquestionsExist(answer);\n      let completedQuestion = {\n        question: this.props.question.question,\n        answer\n      };\n      if (this.hasSubquestions === true) completedQuestion['completedSubquestions'] = this.subquestions;\n      this.props.onStateChange(completedQuestion, this.props.index);\n    };\n\n    this.handleStateChange = subquestions => {\n      if (this.hasSubquestions === false) return;\n      this.subquestions = subquestions;\n      this.storeQuestion(this.state.value);\n    };\n\n    this.state = {\n      value: '',\n      open: false\n    };\n    this.subquestions = [];\n    this.hasSubquestions = false;\n  }\n\n  componentDidMount() {\n    this.storeQuestion(this.state.value);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      className: \"select-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      component: \"legend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }\n    }, this.props.question.question), /*#__PURE__*/React.createElement(Select, {\n      labelId: \"demo-controlled-open-select-label\",\n      id: \"demo-controlled-open-select\",\n      open: this.state.open,\n      onClose: this.handleClose,\n      onOpen: this.handleOpen,\n      value: this.state.value,\n      onChange: this.handleChange,\n      className: \"select-component\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"em\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 29\n      }\n    }, \"None\")), this.renderOptions())), this.renderSubQuestions(this.state.value));\n  }\n\n}\n\nexport default SelectInput;","map":{"version":3,"sources":["/Users/manuel/Documents/CA/ca-fe/src/components/Form/SelectInput.js"],"names":["React","Component","Form","FormLabel","Select","MenuItem","FormControl","SelectInput","constructor","props","handleClose","setState","open","handleOpen","handleChange","event","value","target","storeQuestion","renderOptions","question","inputType","options","map","option","index","subquestionsExist","key","subquestions","length","renderSubQuestions","hasSubquestions","questions","handleStateChange","answer","completedQuestion","onStateChange","state","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Form from './Form';\nimport {FormLabel, Select, MenuItem, FormControl} from '@material-ui/core';\n\nclass SelectInput extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            value: '', \n            open: false\n        }\n\n        this.subquestions = [];\n        this.hasSubquestions = false;\n    }\n\n    componentDidMount(){\n        this.storeQuestion(this.state.value);\n    }\n\n    handleClose = () => {\n        this.setState({open: false});\n    }\n\n    handleOpen = () => {\n        this.setState({open: true});\n    }\n\n    handleChange = (event) => {\n        let {value} = event.target;\n        this.storeQuestion(value);\n        this.setState({value});\n    }\n\n    render(){\n        return <div>\n                <FormControl className = 'select-input'>\n                    <FormLabel component=\"legend\">{this.props.question.question}</FormLabel>\n                    <Select\n                        labelId=\"demo-controlled-open-select-label\"\n                        id=\"demo-controlled-open-select\"\n                        open={this.state.open}\n                        onClose={this.handleClose}\n                        onOpen={this.handleOpen}\n                        value={this.state.value}\n                        onChange={this.handleChange}\n                        className = 'select-component'\n                    >\n                        <MenuItem value=\"\">\n                            <em>None</em>\n                        </MenuItem>\n                        {this.renderOptions()}\n                    </Select>\n                </FormControl>\n                {this.renderSubQuestions(this.state.value)}\n            </div>\n        \n    }\n\n    renderOptions = () => {\n        return this.props.question.inputType.options.map((option, index) => {\n            return <MenuItem value={option} key = {'s' + index}>{option}</MenuItem>\n        })\n    }\n\n    subquestionsExist = (key) => {\n        if(!this.props.question.inputType.subquestions) return false;\n        if(!this.props.question.inputType.subquestions[key]) return false;\n        if(this.props.question.inputType.subquestions[key].length === 0) return false;\n        return true;\n    }\n\n    renderSubQuestions = (key) => {\n        this.hasSubquestions = this.subquestionsExist(key);\n        if(this.hasSubquestions === false) return null;\n        return <Form form = {{questions: this.props.question.inputType.subquestions[key]}} subform onStateChange = {this.handleStateChange}/>\n    }\n\n    storeQuestion = (answer) => {\n        this.hasSubquestions = this.subquestionsExist(answer);\n        let completedQuestion = {\n            question: this.props.question.question,\n            answer\n        }\n\n        if(this.hasSubquestions === true) completedQuestion['completedSubquestions'] = this.subquestions;\n        this.props.onStateChange(completedQuestion, this.props.index);\n    }\n\n    handleStateChange = (subquestions) => {\n        if(this.hasSubquestions === false) return;\n        this.subquestions = subquestions;\n        this.storeQuestion(this.state.value)\n    }\n}\n\nexport default SelectInput;"]},"metadata":{},"sourceType":"module"}