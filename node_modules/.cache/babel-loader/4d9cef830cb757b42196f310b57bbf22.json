{"ast":null,"code":"var _jsxFileName = \"/Users/manuel/Documents/CA/ca-fe/src/containers/Forms/Form.js\";\nimport React, { Component } from 'react';\nimport Input from './Input';\nimport { Redirect } from 'react-router-dom';\nimport $ from 'jquery';\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n    this.questionsPerPage = 3;\n    this.pages = this.props.questions.length / this.questionsPerPage;\n    this.state = {\n      currentPage: 1,\n      submitted: false\n    };\n  }\n\n  render() {\n    return this.state.submitted === true ? /*#__PURE__*/React.createElement(Redirect, {\n      to: {\n        pathname: '/comparison',\n        state: {\n          questions: this.props.questions\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      class: \"modal fade\",\n      id: \"modalForm\",\n      tabindex: \"-1\",\n      role: \"dialog\",\n      \"aria-labelledby\": \"myModalLabel\",\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"modal-dialog\",\n      role: \"document\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"modal-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"modal-header text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      class: \"modal-title w-100 font-weight-bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 33\n      }\n    }, \"Seguro de Vehiculo\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      class: \"close\",\n      \"data-dismiss\": \"modal\",\n      \"aria-label\": \"Close\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 37\n      }\n    }, \"\\xD7\"))), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"modal-body mx-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 29\n      }\n    }, this.props.visible === false ? null : this.renderQuestions(this.state.currentPage)), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"modal-footer d-flex justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 29\n      }\n    }, this.getButtonForForm(this.state.currentPage)))));\n  }\n\n  getButtonForForm(currentPage) {\n    const isLastButton = currentPage === this.pages;\n    return isLastButton === true ? /*#__PURE__*/React.createElement(\"button\", {\n      class: \"btn btn-unique btn-primary\",\n      class: \"close\",\n      \"data-dismiss\": \"modal\",\n      onClick: this.onClick.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, this.getButtonText(), /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fas fa-paper-plane-o ml-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    })) : /*#__PURE__*/React.createElement(\"button\", {\n      class: \"btn btn-unique btn-primary\",\n      onClick: this.onClick.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 10\n      }\n    }, this.getButtonText(), /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fas fa-paper-plane-o ml-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }));\n  }\n\n  onClick() {\n    if (this.state.currentPage < this.pages) {\n      this.setState({\n        currentPage: this.state.currentPage + 1\n      });\n    } else {\n      this.handleSubmit();\n    }\n  }\n\n  handleSubmit() {\n    this.setState({\n      submitted: true\n    });\n  }\n\n  getButtonText() {\n    return this.state.currentPage < this.pages ? 'SIGUIENTE' : 'LISTO';\n  }\n\n  renderQuestions(currentPage) {\n    let questions = [];\n    let initialIndex = (currentPage - 1) * this.questionsPerPage;\n    let i;\n    let finalIndex = initialIndex + this.questionsPerPage;\n\n    for (i = initialIndex; i < finalIndex; i++) {\n      if (i < finalIndex) {\n        questions.push( /*#__PURE__*/React.createElement(Input, {\n          key: i,\n          question: this.props.questions[i],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 30\n          }\n        }));\n      }\n    }\n\n    return questions;\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["/Users/manuel/Documents/CA/ca-fe/src/containers/Forms/Form.js"],"names":["React","Component","Input","Redirect","$","Form","constructor","props","questionsPerPage","pages","questions","length","state","currentPage","submitted","render","pathname","visible","renderQuestions","getButtonForForm","isLastButton","onClick","bind","getButtonText","setState","handleSubmit","initialIndex","i","finalIndex","push"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Input from './Input';\nimport {Redirect} from 'react-router-dom';\nimport $ from 'jquery';\n\nclass Form extends Component{\n    constructor(props){\n        super(props);\n        this.questionsPerPage = 3;\n        this.pages = this.props.questions.length / this.questionsPerPage;\n        this.state = {\n            currentPage: 1,\n            submitted: false\n        }\n    }\n\n    render(){\n        return (\n            this.state.submitted === true?\n            <Redirect to={{\n                pathname: '/comparison',\n                state: { questions: this.props.questions }\n            }}/>\n            :<div class=\"modal fade\" id=\"modalForm\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\"\n                aria-hidden=\"true\">\n                    <div class=\"modal-dialog\" role=\"document\">\n                        <div class=\"modal-content\">\n                            <div class=\"modal-header text-center\">\n                                <h4 class=\"modal-title w-100 font-weight-bold\">Seguro de Vehiculo</h4>\n                                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                    <span aria-hidden=\"true\">&times;</span>\n                                </button>\n                            </div>\n                            <div class=\"modal-body mx-3\">\n                                {this.props.visible === false? null :\n                                    this.renderQuestions(this.state.currentPage)}\n                            </div>\n                            <div class=\"modal-footer d-flex justify-content-center\">\n                                {this.getButtonForForm(this.state.currentPage)}\n                            </div>\n                        </div>\n                    </div>\n            </div>\n        );\n    }\n\n    getButtonForForm(currentPage){\n        const isLastButton = currentPage === this.pages;\n        return isLastButton === true?\n        <button class=\"btn btn-unique btn-primary\"\n            class=\"close\" data-dismiss=\"modal\"\n            onClick = {this.onClick.bind(this)}>\n            {this.getButtonText()}\n            <i class=\"fas fa-paper-plane-o ml-1\"></i>\n        </button>\n        :<button class=\"btn btn-unique btn-primary\"\n            onClick = {this.onClick.bind(this)}>\n            {this.getButtonText()}\n            <i class=\"fas fa-paper-plane-o ml-1\"></i>\n        </button>\n    }\n\n    onClick(){\n        if(this.state.currentPage < this.pages){\n            this.setState({currentPage: this.state.currentPage + 1});\n        }else{\n            this.handleSubmit();\n        }\n    }\n\n    handleSubmit(){\n        this.setState({submitted: true})\n    }\n    getButtonText(){\n        return this.state.currentPage < this.pages ? 'SIGUIENTE' : 'LISTO';\n    }\n\n    renderQuestions(currentPage){\n        let questions = [];\n        let initialIndex = (currentPage-1) * this.questionsPerPage;\n        let i;\n        let finalIndex = initialIndex + this.questionsPerPage;\n\n        for(i = initialIndex; i < finalIndex; i++){\n            if(i < finalIndex){\n              questions.push(<Input key = {i} question = {this.props.questions[i]}/>)  \n            }\n        }\n\n        return questions;\n    }\n}\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}