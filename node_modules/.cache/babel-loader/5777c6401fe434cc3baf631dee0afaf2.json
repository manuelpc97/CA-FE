{"ast":null,"code":"var _jsxFileName = \"/Users/manuel/Documents/CA/ca-fe/src/components/Form/SelectInput.js\";\nimport '../../styles/Input.css';\nimport React, { Component } from 'react';\nimport Form from './Form';\nimport { FormLabel, Select, MenuItem, FormControl } from '@material-ui/core';\nimport { isEmpty } from 'lodash';\n\nclass SelectInput extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.handleOpen = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleChange = event => {\n      let {\n        value\n      } = event.target;\n      this.storeQuestion(value);\n      this.setState({\n        value\n      });\n    };\n\n    this.renderOptions = () => {\n      return this.props.question.inputType.options.map((option, index) => {\n        return /*#__PURE__*/React.createElement(MenuItem, {\n          value: option,\n          key: 's' + index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 20\n          }\n        }, option);\n      });\n    };\n\n    this.subquestionsExist = key => {\n      if (!this.props.question.inputType.subquestions) return false;\n      if (!this.props.question.inputType.subquestions[key]) return false;\n      if (this.props.question.inputType.subquestions[key].length === 0) return false;\n      return true;\n    };\n\n    this.renderSubQuestions = key => {\n      this.hasSubquestions = this.subquestionsExist(key);\n      if (this.hasSubquestions === false) return null;\n      return /*#__PURE__*/React.createElement(Form, {\n        parentForm: false,\n        form: {\n          questions: this.props.question.inputType.subquestions[key]\n        },\n        subform: true,\n        onStateChange: this.handleStateChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 16\n        }\n      });\n    };\n\n    this.storeQuestion = answer => {\n      this.hasSubquestions = this.subquestionsExist(answer);\n      const isRequired = this.props.question.inputType.required ? !isEmpty(answer) : true;\n      this.props.requiredQuestion(isRequired, this.props.index);\n      let completedQuestion = {\n        question: this.props.question.question,\n        answer\n      };\n      if (this.hasSubquestions === true) completedQuestion['completedSubquestions'] = this.subquestions;\n      this.props.onStateChange(completedQuestion, this.props.index);\n    };\n\n    this.handleStateChange = subquestions => {\n      if (this.hasSubquestions === false) return;\n      this.subquestions = subquestions;\n      this.storeQuestion(this.state.value);\n    };\n\n    this.state = {\n      value: '',\n      open: false\n    };\n    this.subquestions = [];\n    this.hasSubquestions = false;\n  }\n\n  componentDidMount() {\n    this.storeQuestion(this.state.value);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      className: \"select-input input-container\",\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      component: \"legend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }, this.props.question.question), /*#__PURE__*/React.createElement(Select // autoWidth={true}\n    , {\n      labelId: \"demo-controlled-open-select-label\",\n      id: \"demo-controlled-open-select\",\n      open: this.state.open,\n      onClose: this.handleClose,\n      onOpen: this.handleOpen,\n      value: this.state.value,\n      onChange: this.handleChange,\n      className: \"select-component\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"em\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }\n    }, \"None\")), this.renderOptions())));\n  }\n\n}\n\nexport default SelectInput;","map":{"version":3,"sources":["/Users/manuel/Documents/CA/ca-fe/src/components/Form/SelectInput.js"],"names":["React","Component","Form","FormLabel","Select","MenuItem","FormControl","isEmpty","SelectInput","constructor","props","handleClose","setState","open","handleOpen","handleChange","event","value","target","storeQuestion","renderOptions","question","inputType","options","map","option","index","subquestionsExist","key","subquestions","length","renderSubQuestions","hasSubquestions","questions","handleStateChange","answer","isRequired","required","requiredQuestion","completedQuestion","onStateChange","state","componentDidMount","render"],"mappings":"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","sourcesContent":["import '../../styles/Input.css';\nimport React, { Component } from 'react';\nimport Form from './Form';\nimport { FormLabel, Select, MenuItem, FormControl } from '@material-ui/core';\nimport { isEmpty } from 'lodash';\n\nclass SelectInput extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: '',\n            open: false\n        }\n\n        this.subquestions = [];\n        this.hasSubquestions = false;\n    }\n\n    componentDidMount() {\n        this.storeQuestion(this.state.value);\n    }\n\n    handleClose = () => {\n        this.setState({ open: false });\n    }\n\n    handleOpen = () => {\n        this.setState({ open: true });\n    }\n\n    handleChange = (event) => {\n        let { value } = event.target;\n        this.storeQuestion(value);\n        this.setState({ value });\n    }\n\n    render() {\n        return <div>\n            <FormControl className='select-input input-container' fullWidth={true}>\n                <FormLabel component=\"legend\">{this.props.question.question}</FormLabel>\n                <Select\n                    // autoWidth={true}\n                    labelId=\"demo-controlled-open-select-label\"\n                    id=\"demo-controlled-open-select\"\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    onOpen={this.handleOpen}\n                    value={this.state.value}\n                    onChange={this.handleChange}\n                    className='select-component'\n                >\n                    <MenuItem value=\"\">\n                        <em>None</em>\n                    </MenuItem>\n                    {this.renderOptions()}\n                </Select>\n            </FormControl>\n            {/*this.renderSubQuestions(this.state.value)*/}\n        </div>\n\n    }\n\n    renderOptions = () => {\n        return this.props.question.inputType.options.map((option, index) => {\n            return <MenuItem value={option} key={'s' + index}>{option}</MenuItem>\n        })\n    }\n\n    subquestionsExist = (key) => {\n        if (!this.props.question.inputType.subquestions) return false;\n        if (!this.props.question.inputType.subquestions[key]) return false;\n        if (this.props.question.inputType.subquestions[key].length === 0) return false;\n        return true;\n    }\n\n    renderSubQuestions = (key) => {\n        this.hasSubquestions = this.subquestionsExist(key);\n        if (this.hasSubquestions === false) return null;\n        return <Form  parentForm={false} form={{ questions: this.props.question.inputType.subquestions[key] }} subform onStateChange={this.handleStateChange} />\n    }\n\n    storeQuestion = (answer) => {\n        this.hasSubquestions = this.subquestionsExist(answer);\n\n        const isRequired = this.props.question.inputType.required ? !isEmpty(answer) : true;\n        this.props.requiredQuestion(isRequired, this.props.index);\n\n        let completedQuestion = {\n            question: this.props.question.question,\n            answer\n        }\n\n        if (this.hasSubquestions === true) completedQuestion['completedSubquestions'] = this.subquestions;\n        this.props.onStateChange(completedQuestion, this.props.index);\n    }\n\n    handleStateChange = (subquestions) => {\n        if (this.hasSubquestions === false) return;\n        this.subquestions = subquestions;\n        this.storeQuestion(this.state.value)\n    }\n}\n\nexport default SelectInput;"]},"metadata":{},"sourceType":"module"}