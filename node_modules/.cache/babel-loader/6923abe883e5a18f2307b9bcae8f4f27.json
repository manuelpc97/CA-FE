{"ast":null,"code":"var _jsxFileName = \"/Users/manuel/Documents/CA/ca-fe/src/components/Form/FileInput.js\";\nimport '../../styles/Input.css';\nimport React, { Component } from 'react';\nimport validateValue from '../../helpers/validate/regexInput';\nimport { isEmpty } from 'lodash';\n\nclass FileInput extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onValueChange = event => {\n      let file = event.target.files[0];\n      const reader = new FileReader();\n      const state = this;\n\n      if (!isEmpty(file.name)) {\n        reader.onload = function (e) {\n          state.setState({\n            value: e.target.result\n          });\n          state.storeQuestion();\n        };\n\n        reader.readAsDataURL(file);\n      } else {\n        file = {\n          name: 'Seleccionar Imagen'\n        };\n      }\n\n      this.setState({\n        fileChoosed: file.name\n      });\n    };\n\n    this.storeQuestion = () => {\n      const isValid = !isEmpty(this.state.value);\n      this.setState({\n        isValidValue: isValid\n      });\n      let completedQuestion = {\n        question: this.props.question.question,\n        answer: this.state.value\n      };\n      this.props.onStateChange(completedQuestion, this.props.index);\n      const isRequired = this.props.question.inputType.required ? isValid : true;\n      this.props.requiredQuestion(isRequired, this.props.index);\n    };\n\n    this.state = {\n      value: '',\n      isValidValue: true,\n      fileChoosed: 'Seleccionar Imagen'\n    };\n  }\n\n  componentDidMount() {\n    this.storeQuestion(this.state.value);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }, this.props.question.question), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"custom-file\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      className: \"fileInput\",\n      id: `input-file${this.props.index}`,\n      accept: \"image/*\",\n      onChange: this.onValueChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"custom-file-label fileInput\",\n      for: `input-file${this.props.index}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }\n    }, this.state.fileChoosed)));\n  }\n\n}\n\nexport default FileInput;","map":{"version":3,"sources":["/Users/manuel/Documents/CA/ca-fe/src/components/Form/FileInput.js"],"names":["React","Component","validateValue","isEmpty","FileInput","constructor","props","onValueChange","event","file","target","files","reader","FileReader","state","name","onload","e","setState","value","result","storeQuestion","readAsDataURL","fileChoosed","isValid","isValidValue","completedQuestion","question","answer","onStateChange","index","isRequired","inputType","required","requiredQuestion","componentDidMount","render"],"mappings":"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","sourcesContent":["import '../../styles/Input.css';\nimport React, { Component } from 'react';\nimport validateValue from '../../helpers/validate/regexInput';\nimport { isEmpty } from 'lodash';\n\nclass FileInput extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: '',\n            isValidValue: true,\n            fileChoosed: 'Seleccionar Imagen'\n        }\n    }\n\n    componentDidMount() {\n        this.storeQuestion(this.state.value);\n    }\n\n    onValueChange = (event) => {\n        let file = event.target.files[0];\n        const reader = new FileReader();\n        const state = this;\n        if (!isEmpty(file.name)) {\n            reader.onload = function (e) {\n                state.setState({\n                    value: e.target.result,\n                })\n                state.storeQuestion();\n            }\n            reader.readAsDataURL(file);\n        } else {\n            file = { name: 'Seleccionar Imagen' }\n        }\n        this.setState({ fileChoosed: file.name });\n    }\n\n\n    render() {\n        return (\n            <div className='input-container'>\n                <label>{this.props.question.question}</label>\n                <div className=\"custom-file\">\n                    <input type=\"file\" className=\"fileInput\" id={`input-file${this.props.index}`} accept=\"image/*\" onChange={this.onValueChange} />\n                    <label className=\"custom-file-label fileInput\" for={`input-file${this.props.index}`}>\n                        {this.state.fileChoosed}\n                    </label>\n\n                </div>\n            </div>\n        )\n    }\n\n    storeQuestion = () => {\n        const isValid = !isEmpty(this.state.value);\n        this.setState({ isValidValue: isValid })\n        let completedQuestion = {\n            question: this.props.question.question,\n            answer: this.state.value\n        }\n        this.props.onStateChange(completedQuestion, this.props.index);\n        const isRequired = this.props.question.inputType.required ? isValid : true;\n        this.props.requiredQuestion(isRequired, this.props.index);\n    }\n}\n\nexport default FileInput;"]},"metadata":{},"sourceType":"module"}