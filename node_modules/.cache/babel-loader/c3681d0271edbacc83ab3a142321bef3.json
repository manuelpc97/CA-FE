{"ast":null,"code":"var _jsxFileName = \"/Users/manuel/Documents/CA/ca-fe/src/components/Content/Products.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport ProductChart from './ProductChart';\nimport { getAllProducts, getProductsByInsurance, getAllBusiness, getAllCovers } from './../../actions';\n\nclass Product extends Component {\n  constructor(props) {\n    super(props);\n\n    this.buildProductManager = () => {\n      if (this.props.products.length === 0 || this.props.businessList.length === 0 || this.props.covers.length === 0) return;\n      this.manager = this.props.products.map(product => {\n        let newProduct = Object.assign({}, product);\n        newProduct.business = this.props.businessList.find(business => product.business === business._id);\n        newProduct.covers = this.props.covers.filter(cover => cover.product === product._id);\n        return newProduct;\n      });\n    };\n\n    this.manager = [];\n  }\n\n  async componentDidMount() {\n    if (this.props.params.insurance) {\n      await this.props.getProductsByInsurance(this.props.params.insurance._id);\n    } else {\n      await this.props.getAllProducts();\n    }\n\n    await this.props.getAllBusiness();\n    await this.props.getAllCovers();\n  }\n\n  render() {\n    this.buildProductManager();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 16\n      }\n    }, \"PRODUCTS\");\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    products: state.product.products,\n    businessList: state.business.businesses,\n    covers: state.cover.covers\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getAllProducts,\n  getProductsByInsurance,\n  getAllBusiness,\n  getAllCovers\n})(Product);","map":{"version":3,"sources":["/Users/manuel/Documents/CA/ca-fe/src/components/Content/Products.js"],"names":["React","Component","connect","ProductChart","getAllProducts","getProductsByInsurance","getAllBusiness","getAllCovers","Product","constructor","props","buildProductManager","products","length","businessList","covers","manager","map","product","newProduct","Object","assign","business","find","_id","filter","cover","componentDidMount","params","insurance","render","mapStateToProps","state","businesses"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAAQC,cAAR,EAAwBC,sBAAxB,EAAgDC,cAAhD,EAAgEC,YAAhE,QAAmF,iBAAnF;;AAEA,MAAMC,OAAN,SAAsBP,SAAtB,CAA+B;AAC3BQ,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAoBlBC,mBApBkB,GAoBI,MAAM;AACxB,UAAG,KAAKD,KAAL,CAAWE,QAAX,CAAoBC,MAApB,KAA+B,CAA/B,IAAoC,KAAKH,KAAL,CAAWI,YAAX,CAAwBD,MAAxB,KAAmC,CAAvE,IAA4E,KAAKH,KAAL,CAAWK,MAAX,CAAkBF,MAAlB,KAA6B,CAA5G,EAA+G;AAE/G,WAAKG,OAAL,GAAe,KAAKN,KAAL,CAAWE,QAAX,CAAoBK,GAApB,CAAwBC,OAAO,IAAI;AAC9C,YAAIC,UAAU,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,OAAlB,CAAjB;AACAC,QAAAA,UAAU,CAACG,QAAX,GAAsB,KAAKZ,KAAL,CAAWI,YAAX,CAAwBS,IAAxB,CAA6BD,QAAQ,IAAIJ,OAAO,CAACI,QAAR,KAAqBA,QAAQ,CAACE,GAAvE,CAAtB;AACAL,QAAAA,UAAU,CAACJ,MAAX,GAAoB,KAAKL,KAAL,CAAWK,MAAX,CAAkBU,MAAlB,CAAyBC,KAAK,IAAIA,KAAK,CAACR,OAAN,KAAkBA,OAAO,CAACM,GAA5D,CAApB;AACA,eAAOL,UAAP;AACH,OALc,CAAf;AAMH,KA7BiB;;AAEd,SAAKH,OAAL,GAAe,EAAf;AACH;;AAED,QAAMW,iBAAN,GAAyB;AACrB,QAAG,KAAKjB,KAAL,CAAWkB,MAAX,CAAkBC,SAArB,EAA+B;AAC3B,YAAM,KAAKnB,KAAL,CAAWL,sBAAX,CAAkC,KAAKK,KAAL,CAAWkB,MAAX,CAAkBC,SAAlB,CAA4BL,GAA9D,CAAN;AACH,KAFD,MAEK;AACD,YAAM,KAAKd,KAAL,CAAWN,cAAX,EAAN;AACH;;AACD,UAAM,KAAKM,KAAL,CAAWJ,cAAX,EAAN;AACA,UAAM,KAAKI,KAAL,CAAWH,YAAX,EAAN;AACH;;AAEDuB,EAAAA,MAAM,GAAE;AACJ,SAAKnB,mBAAL;AACA,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACH;;AAnB0B;;AAiC/B,MAAMoB,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHpB,IAAAA,QAAQ,EAAEoB,KAAK,CAACd,OAAN,CAAcN,QADrB;AAEHE,IAAAA,YAAY,EAAEkB,KAAK,CAACV,QAAN,CAAeW,UAF1B;AAGHlB,IAAAA,MAAM,EAAEiB,KAAK,CAACN,KAAN,CAAYX;AAHjB,GAAP;AAKH,CAND;;AAQA,eAAeb,OAAO,CAAC6B,eAAD,EAAkB;AAAC3B,EAAAA,cAAD;AAAiBC,EAAAA,sBAAjB;AAAyCC,EAAAA,cAAzC;AAAyDC,EAAAA;AAAzD,CAAlB,CAAP,CAAiGC,OAAjG,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport ProductChart from './ProductChart';\nimport {getAllProducts, getProductsByInsurance, getAllBusiness, getAllCovers} from './../../actions';\n\nclass Product extends Component{\n    constructor(props){\n        super(props);\n        this.manager = [];\n    }\n\n    async componentDidMount(){\n        if(this.props.params.insurance){\n            await this.props.getProductsByInsurance(this.props.params.insurance._id);\n        }else{\n            await this.props.getAllProducts();\n        }\n        await this.props.getAllBusiness();\n        await this.props.getAllCovers();\n    }\n\n    render(){\n        this.buildProductManager();\n        return <div>PRODUCTS</div>\n    }\n\n    buildProductManager = () => {\n        if(this.props.products.length === 0 || this.props.businessList.length === 0 || this.props.covers.length === 0) return;\n        \n        this.manager = this.props.products.map(product => {\n            let newProduct = Object.assign({}, product);\n            newProduct.business = this.props.businessList.find(business => product.business === business._id);\n            newProduct.covers = this.props.covers.filter(cover => cover.product === product._id);\n            return newProduct;\n        });\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        products: state.product.products,\n        businessList: state.business.businesses, \n        covers: state.cover.covers\n    }\n}\n\nexport default connect(mapStateToProps, {getAllProducts, getProductsByInsurance, getAllBusiness, getAllCovers})(Product);"]},"metadata":{},"sourceType":"module"}