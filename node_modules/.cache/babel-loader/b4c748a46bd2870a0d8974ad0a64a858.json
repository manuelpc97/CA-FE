{"ast":null,"code":"import _classCallCheck from\"/Users/manuel/Documents/CA/ca-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/manuel/Documents/CA/ca-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _createSuper from\"/Users/manuel/Documents/CA/ca-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _inherits from\"/Users/manuel/Documents/CA/ca-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import'../../styles/Input.css';import React,{Component}from'react';import{FormControl,FormGroup,FormControlLabel,Checkbox}from'@material-ui/core';import{withStyles}from'@material-ui/core/styles';var OrangeCheckbox=withStyles({root:{'&$checked':{color:'#ff9800'}},checked:{}})(function(props){return/*#__PURE__*/React.createElement(Checkbox,Object.assign({color:\"default\"},props));});var CheckBoxInput=/*#__PURE__*/function(_Component){_inherits(CheckBoxInput,_Component);var _super=_createSuper(CheckBoxInput);function CheckBoxInput(props){var _this;_classCallCheck(this,CheckBoxInput);_this=_super.call(this,props);_this.handleChange=function(event){var checked=event.target.checked;_this.storeQuestion(checked);_this.setState({checked:checked});};_this.storeQuestion=function(checked){var completedAnswer={question:_this.props.question.question,checked:checked};var isRequired=_this.props.question.inputType.required?checked:true;_this.props.requiredQuestion(isRequired,_this.props.index);_this.props.onStateChange(completedAnswer,_this.props.index);};_this.state={checked:false};return _this;}_createClass(CheckBoxInput,[{key:\"componentDidMount\",value:function componentDidMount(){this.storeQuestion(this.state.checked);}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(FormControl,{component:\"fieldset\",className:\"input-container\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormControlLabel,{control:/*#__PURE__*/React.createElement(OrangeCheckbox,{checked:this.state.checked,onChange:this.handleChange,name:\"check\"}),label:this.props.question.question})));}}]);return CheckBoxInput;}(Component);export default CheckBoxInput;","map":{"version":3,"sources":["/Users/manuel/Documents/CA/ca-fe/src/components/Form/CheckBoxInput.js"],"names":["React","Component","FormControl","FormGroup","FormControlLabel","Checkbox","withStyles","OrangeCheckbox","root","color","checked","props","CheckBoxInput","handleChange","event","target","storeQuestion","setState","completedAnswer","question","isRequired","inputType","required","requiredQuestion","index","onStateChange","state"],"mappings":"4kBAAA,MAAO,wBAAP,CACA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,WAAT,CAAsBC,SAAtB,CAAiCC,gBAAjC,CAAmDC,QAAnD,KAAmE,mBAAnE,CACA,OAASC,UAAT,KAA2B,0BAA3B,CAEA,GAAMC,CAAAA,cAAc,CAAGD,UAAU,CAAC,CAC9BE,IAAI,CAAE,CACF,YAAa,CACTC,KAAK,CAAE,SADE,CADX,CADwB,CAM9BC,OAAO,CAAE,EANqB,CAAD,CAAV,CAOpB,SAACC,KAAD,qBAAW,oBAAC,QAAD,gBAAU,KAAK,CAAC,SAAhB,EAA8BA,KAA9B,EAAX,EAPoB,CAAvB,C,GASMC,CAAAA,a,8GACF,uBAAYD,KAAZ,CAAmB,+CACf,uBAAMA,KAAN,EADe,MAWnBE,YAXmB,CAWJ,SAACC,KAAD,CAAW,IAChBJ,CAAAA,OADgB,CACJI,KAAK,CAACC,MADF,CAChBL,OADgB,CAEtB,MAAKM,aAAL,CAAmBN,OAAnB,EACA,MAAKO,QAAL,CAAc,CAAEP,OAAO,CAAPA,OAAF,CAAd,EACH,CAfkB,OA4BnBM,aA5BmB,CA4BH,SAACN,OAAD,CAAa,CACzB,GAAIQ,CAAAA,eAAe,CAAG,CAClBC,QAAQ,CAAE,MAAKR,KAAL,CAAWQ,QAAX,CAAoBA,QADZ,CAElBT,OAAO,CAAPA,OAFkB,CAAtB,CAIA,GAAMU,CAAAA,UAAU,CAAG,MAAKT,KAAL,CAAWQ,QAAX,CAAoBE,SAApB,CAA8BC,QAA9B,CAAyCZ,OAAzC,CAAmD,IAAtE,CACA,MAAKC,KAAL,CAAWY,gBAAX,CAA4BH,UAA5B,CAAwC,MAAKT,KAAL,CAAWa,KAAnD,EACA,MAAKb,KAAL,CAAWc,aAAX,CAAyBP,eAAzB,CAA0C,MAAKP,KAAL,CAAWa,KAArD,EACH,CApCkB,CAEf,MAAKE,KAAL,CAAa,CACThB,OAAO,CAAE,KADA,CAAb,CAFe,aAKlB,C,uFAEmB,CAChB,KAAKM,aAAL,CAAmB,KAAKU,KAAL,CAAWhB,OAA9B,EACH,C,uCAQQ,CACL,mBAAO,oBAAC,WAAD,EAAa,SAAS,CAAC,UAAvB,CAAkC,SAAS,CAAG,iBAA9C,eACH,oBAAC,SAAD,mBACI,oBAAC,gBAAD,EACI,OAAO,cAAE,oBAAC,cAAD,EAAgB,OAAO,CAAE,KAAKgB,KAAL,CAAWhB,OAApC,CAA6C,QAAQ,CAAE,KAAKG,YAA5D,CAA0E,IAAI,CAAC,OAA/E,EADb,CAEI,KAAK,CAAE,KAAKF,KAAL,CAAWQ,QAAX,CAAoBA,QAF/B,EADJ,CADG,CAAP,CAQH,C,2BA3BuBlB,S,EAwC5B,cAAeW,CAAAA,aAAf","sourcesContent":["import '../../styles/Input.css'\nimport React, { Component } from 'react';\nimport { FormControl, FormGroup, FormControlLabel, Checkbox } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst OrangeCheckbox = withStyles({\n    root: {\n        '&$checked': {\n            color: '#ff9800',\n        },\n    },\n    checked: {},\n})((props) => <Checkbox color=\"default\" {...props} />);\n\nclass CheckBoxInput extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            checked: false\n        }\n    }\n\n    componentDidMount() {\n        this.storeQuestion(this.state.checked);\n    }\n\n    handleChange = (event) => {\n        let { checked } = event.target;\n        this.storeQuestion(checked);\n        this.setState({ checked });\n    }\n\n    render() {\n        return <FormControl component=\"fieldset\" className = 'input-container'>\n            <FormGroup>\n                <FormControlLabel\n                    control={<OrangeCheckbox checked={this.state.checked} onChange={this.handleChange} name=\"check\" />}\n                    label={this.props.question.question}\n                />\n            </FormGroup>\n        </FormControl>\n    }\n\n    storeQuestion = (checked) => {\n        let completedAnswer = {\n            question: this.props.question.question,\n            checked\n        }\n        const isRequired = this.props.question.inputType.required ? checked : true;\n        this.props.requiredQuestion(isRequired, this.props.index);\n        this.props.onStateChange(completedAnswer, this.props.index);\n    }\n}\n\nexport default CheckBoxInput;"]},"metadata":{},"sourceType":"module"}