{"ast":null,"code":"var _jsxFileName = \"/Users/manuel/Documents/CA/ca-fe/src/components/Form/SelectInput.js\";\nimport React, { Component } from 'react';\nimport Form from './Form';\nimport { FormLabel, Select, MenuItem, FormControl } from '@material-ui/core';\n\nclass SelectInput extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.handleOpen = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleChange = event => {\n      let {\n        value\n      } = event.target;\n      this.setState({\n        value\n      });\n    };\n\n    this.renderOptions = () => {\n      return this.props.question.inputType.options.map((option, index) => {\n        return /*#__PURE__*/React.createElement(MenuItem, {\n          value: option,\n          key: 's' + index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 20\n          }\n        }, option);\n      });\n    };\n\n    this.renderSubQuestions = key => {\n      console.log('TRYING TO RENDER: ', key);\n      if (!this.props.question.inputType.subquestions) return null;\n      if (!this.props.question.inputType.subquestions[key]) return null;\n      return /*#__PURE__*/React.createElement(Form, {\n        form: {\n          questions: this.props.question.inputType.subquestions[key]\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 16\n        }\n      });\n    };\n\n    this.state = {\n      value: '',\n      open: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      className: \"select-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      component: \"legend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }\n    }, this.props.question.question), /*#__PURE__*/React.createElement(Select, {\n      labelId: \"demo-controlled-open-select-label\",\n      id: \"demo-controlled-open-select\",\n      open: this.state.open,\n      onClose: this.handleClose,\n      onOpen: this.handleOpen,\n      value: this.state.value,\n      onChange: this.handleChange,\n      className: \"select-component\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"em\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 29\n      }\n    }, \"None\")), this.renderOptions())), this.renderSubQuestions(this.props.value));\n  }\n\n}\n\nexport default SelectInput;","map":{"version":3,"sources":["/Users/manuel/Documents/CA/ca-fe/src/components/Form/SelectInput.js"],"names":["React","Component","Form","FormLabel","Select","MenuItem","FormControl","SelectInput","constructor","props","handleClose","setState","open","handleOpen","handleChange","event","value","target","renderOptions","question","inputType","options","map","option","index","renderSubQuestions","key","console","log","subquestions","questions","state","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAAQC,SAAR,EAAmBC,MAAnB,EAA2BC,QAA3B,EAAqCC,WAArC,QAAuD,mBAAvD;;AAEA,MAAMC,WAAN,SAA0BN,SAA1B,CAAmC;AAC/BO,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAQlBC,WARkB,GAQJ,MAAM;AAChB,WAAKC,QAAL,CAAc;AAACC,QAAAA,IAAI,EAAE;AAAP,OAAd;AACH,KAViB;;AAAA,SAYlBC,UAZkB,GAYL,MAAM;AACf,WAAKF,QAAL,CAAc;AAACC,QAAAA,IAAI,EAAE;AAAP,OAAd;AACH,KAdiB;;AAAA,SAgBlBE,YAhBkB,GAgBFC,KAAD,IAAW;AACtB,UAAI;AAACC,QAAAA;AAAD,UAAUD,KAAK,CAACE,MAApB;AACA,WAAKN,QAAL,CAAc;AAACK,QAAAA;AAAD,OAAd;AACH,KAnBiB;;AAAA,SA8ClBE,aA9CkB,GA8CF,MAAM;AAClB,aAAO,KAAKT,KAAL,CAAWU,QAAX,CAAoBC,SAApB,CAA8BC,OAA9B,CAAsCC,GAAtC,CAA0C,CAACC,MAAD,EAASC,KAAT,KAAmB;AAChE,4BAAO,oBAAC,QAAD;AAAU,UAAA,KAAK,EAAED,MAAjB;AAAyB,UAAA,GAAG,EAAI,MAAMC,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA8CD,MAA9C,CAAP;AACH,OAFM,CAAP;AAGH,KAlDiB;;AAAA,SAoDlBE,kBApDkB,GAoDIC,GAAD,IAAS;AAC1BC,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,GAAlC;AACA,UAAG,CAAC,KAAKjB,KAAL,CAAWU,QAAX,CAAoBC,SAApB,CAA8BS,YAAlC,EAAgD,OAAO,IAAP;AAChD,UAAG,CAAC,KAAKpB,KAAL,CAAWU,QAAX,CAAoBC,SAApB,CAA8BS,YAA9B,CAA2CH,GAA3C,CAAJ,EAAqD,OAAO,IAAP;AACrD,0BAAO,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAI;AAACI,UAAAA,SAAS,EAAE,KAAKrB,KAAL,CAAWU,QAAX,CAAoBC,SAApB,CAA8BS,YAA9B,CAA2CH,GAA3C;AAAZ,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAzDiB;;AAEd,SAAKK,KAAL,GAAa;AACTf,MAAAA,KAAK,EAAE,EADE;AAETJ,MAAAA,IAAI,EAAE;AAFG,KAAb;AAIH;;AAeDoB,EAAAA,MAAM,GAAE;AACJ,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,WAAD;AAAa,MAAA,SAAS,EAAG,cAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+B,KAAKvB,KAAL,CAAWU,QAAX,CAAoBA,QAAnD,CADJ,eAEI,oBAAC,MAAD;AACI,MAAA,OAAO,EAAC,mCADZ;AAEI,MAAA,EAAE,EAAC,6BAFP;AAGI,MAAA,IAAI,EAAE,KAAKY,KAAL,CAAWnB,IAHrB;AAII,MAAA,OAAO,EAAE,KAAKF,WAJlB;AAKI,MAAA,MAAM,EAAE,KAAKG,UALjB;AAMI,MAAA,KAAK,EAAE,KAAKkB,KAAL,CAAWf,KANtB;AAOI,MAAA,QAAQ,EAAE,KAAKF,YAPnB;AAQI,MAAA,SAAS,EAAG,kBARhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAUI,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAC,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CAVJ,EAaK,KAAKI,aAAL,EAbL,CAFJ,CADD,EAmBE,KAAKO,kBAAL,CAAwB,KAAKhB,KAAL,CAAWO,KAAnC,CAnBF,CAAP;AAsBH;;AA7C8B;;AA6DnC,eAAeT,WAAf","sourcesContent":["import React, {Component} from 'react';\nimport Form from './Form';\nimport {FormLabel, Select, MenuItem, FormControl} from '@material-ui/core';\n\nclass SelectInput extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            value: '', \n            open: false\n        }\n    }\n\n    handleClose = () => {\n        this.setState({open: false});\n    }\n\n    handleOpen = () => {\n        this.setState({open: true});\n    }\n\n    handleChange = (event) => {\n        let {value} = event.target;\n        this.setState({value});\n    }\n\n    render(){\n        return <div>\n                <FormControl className = 'select-input'>\n                    <FormLabel component=\"legend\">{this.props.question.question}</FormLabel>\n                    <Select\n                        labelId=\"demo-controlled-open-select-label\"\n                        id=\"demo-controlled-open-select\"\n                        open={this.state.open}\n                        onClose={this.handleClose}\n                        onOpen={this.handleOpen}\n                        value={this.state.value}\n                        onChange={this.handleChange}\n                        className = 'select-component'\n                    >\n                        <MenuItem value=\"\">\n                            <em>None</em>\n                        </MenuItem>\n                        {this.renderOptions()}\n                    </Select>\n                </FormControl>\n                {this.renderSubQuestions(this.props.value)}\n            </div>\n        \n    }\n\n    renderOptions = () => {\n        return this.props.question.inputType.options.map((option, index) => {\n            return <MenuItem value={option} key = {'s' + index}>{option}</MenuItem>\n        })\n    }\n\n    renderSubQuestions = (key) => {\n        console.log('TRYING TO RENDER: ', key)\n        if(!this.props.question.inputType.subquestions) return null;\n        if(!this.props.question.inputType.subquestions[key]) return null;\n        return <Form form = {{questions: this.props.question.inputType.subquestions[key]}}/>\n    }\n}\n\nexport default SelectInput;"]},"metadata":{},"sourceType":"module"}