{"ast":null,"code":"var _jsxFileName = \"/Users/manuel/Documents/CA/ca-fe/src/components/Comparison.js\";\nimport React, { Component } from 'react';\nimport BusinessService from '../services/business';\nimport ProductService from '../services/product';\nimport CoverService from '../services/cover';\nimport InsuranceService from '../services/insurance';\nimport ProductCard from './ProductCard';\nimport CoverModal from './CoverModal';\nimport CongratModal from './CongratModal';\nimport Form from '../containers/Forms/Form';\n\nclass Comparison extends Component {\n  constructor(props) {\n    super(props);\n    this.businessService = new BusinessService();\n    this.productService = new ProductService();\n    this.coverService = new CoverService();\n    this.insuranceService = new InsuranceService();\n    this.businessList = [];\n    this.insuranceList = [];\n    this.state = {\n      businesses: [],\n      currentProduct: {},\n      currentBusiness: '',\n      title: '',\n      message: '',\n      showForm: false\n    };\n  }\n\n  componentWillMount() {\n    this.insuranceService.getAllInsurances().then(response => {\n      console.log('RESPONSE: ', response.data);\n      this.insuranceList = response.data;\n    }, error => {\n      console.log('[ERROR]', error);\n    });\n    this.businessService.getAllBusinesses().then(response => {\n      this.businessList = response.data;\n      this.businessList.forEach((business, businessIndex) => {\n        this.productService.getProductsByBusiness(business._id).then(response => {\n          business['products'] = response.data;\n          business.products.forEach((product, productIndex) => {\n            this.coverService.getCoverByProduct(product._id).then(response => {\n              product['covers'] = response.data;\n\n              if (businessIndex === business.products.length - 1) {\n                if (productIndex === business.products.length - 1) {\n                  this.setState({\n                    businesses: this.businessList\n                  });\n                }\n              }\n            }, error => {\n              console.log('[ERROR]', error);\n            });\n          });\n        }, error => {\n          console.log('[ERROR]', error);\n        });\n      });\n    }, error => {\n      console.log('[ERROR]', error);\n    });\n  }\n\n  render() {\n    console.log('HAVING THE QUESTIONS: ', this.props.location.state.questions);\n    let cards = [];\n    console.log('state: ', this.state);\n    this.state.businesses.forEach(business => {\n      business.products.forEach(product => {\n        cards.push(this.buildCard(business, product));\n      });\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginTop: '100px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 16\n      }\n    }, cards, /*#__PURE__*/React.createElement(CoverModal, {\n      modalID: \"coverModal\",\n      product: this.state.currentProduct,\n      business: this.state.currentBusiness,\n      showCongrat: this.showCongratModal.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(CongratModal, {\n      title: this.state.title,\n      message: this.state.message,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Form, {\n      questions: this.getQuestions(),\n      visible: this.state.showForm,\n      type: \"lf\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    }));\n  }\n\n  buildCard(business, product) {\n    return /*#__PURE__*/React.createElement(ProductCard, {\n      onModalOpened: this.onModalOpened.bind(this),\n      business: business.name,\n      insurance: this.insuranceList.filter(insurance => insurance._id === product.insurance)[0].name,\n      product: product,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 16\n      }\n    });\n  }\n\n  onModalOpened(currentProduct, currentBusiness) {\n    this.setState({\n      currentProduct,\n      currentBusiness\n    });\n  }\n\n  showCongratModal() {\n    this.setState({\n      title: 'FELICIDADES',\n      message: 'En un momento te contactara un agente'\n    });\n  }\n\n  showForm() {\n    this.setState({\n      showForm: true\n    });\n  }\n\n  getQuestions() {\n    return [this.getQuestion('Fecha de Nacimiento', 'text', [], 0, ''), this.getQuestion('Edad Actual', 'text', [], 1, ''), this.getQuestion('Lugar de Nacimiento', 'email', [], 2, ''), this.getQuestion('Estado Civil', 'text', [], 3, ''), this.getQuestion('Ocupacion Actual', 'text', [], 4, ''), this.getQuestion('Profesion u Oficio', 'text', [], 5, ''), this.getQuestion('Nombre de la Empresa', 'text', [], 6, ''), this.getQuestion('Posicion o Cargo', 'text', [], 7, ''), this.getQuestion('Antig체edad Laboral', 'text', [], 8, ''), this.getQuestion('Direccion completa de Residencia', 'text', [], 9, ''), this.getQuestion('Ingresos Mensuales', 'text', [], 11, ''), this.getQuestion('Gastos Mensuales', 'text', [], 12, ''), this.getQuestion('Antig체edad Laboral', 'text', [], 13, ''), this.getQuestion('Activos Aproximados', 'text', [], 14, ''), this.getQuestion('Pasivos Aproximados', 'text', [], 15, ''), this.getQuestion('Tipo de Poliza', 'text', [], 16, ''), this.getQuestion('Tipo de divisa para la emisi처n de la p처liza', 'text', [], 17, ''), this.getQuestion('Numero de Placa', 'text', [], 18, ''), this.getQuestion('Serie de chasis', 'text', [], 19, ''), this.getQuestion('Serie de motor', 'text', [], 20, ''), this.getQuestion('Uso del vehiculo', 'text', [], 21, ''), this.getQuestion('Valor de Mercado Actual de Vehiculo', 'text', [], 22, '')];\n  }\n\n  getQuestion(question, type, options, id, answer) {\n    return {\n      question,\n      type,\n      options,\n      id,\n      answer\n    };\n  }\n\n}\n\nexport default Comparison;","map":{"version":3,"sources":["/Users/manuel/Documents/CA/ca-fe/src/components/Comparison.js"],"names":["React","Component","BusinessService","ProductService","CoverService","InsuranceService","ProductCard","CoverModal","CongratModal","Form","Comparison","constructor","props","businessService","productService","coverService","insuranceService","businessList","insuranceList","state","businesses","currentProduct","currentBusiness","title","message","showForm","componentWillMount","getAllInsurances","then","response","console","log","data","error","getAllBusinesses","forEach","business","businessIndex","getProductsByBusiness","_id","products","product","productIndex","getCoverByProduct","length","setState","render","location","questions","cards","push","buildCard","marginTop","showCongratModal","bind","getQuestions","onModalOpened","name","filter","insurance","getQuestion","question","type","options","id","answer"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,eAAP,MAA4B,sBAA5B;AACA,OAAOC,cAAP,MAA2B,qBAA3B;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,OAAOC,gBAAP,MAA6B,uBAA7B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,IAAP,MAAiB,0BAAjB;;AAEA,MAAMC,UAAN,SAAyBT,SAAzB,CAAkC;AAC9BU,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,eAAL,GAAuB,IAAIX,eAAJ,EAAvB;AACA,SAAKY,cAAL,GAAsB,IAAIX,cAAJ,EAAtB;AACA,SAAKY,YAAL,GAAoB,IAAIX,YAAJ,EAApB;AACA,SAAKY,gBAAL,GAAwB,IAAIX,gBAAJ,EAAxB;AACA,SAAKY,YAAL,GAAoB,EAApB;AACA,SAAKC,aAAL,GAAqB,EAArB;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAE,EADH;AAETC,MAAAA,cAAc,EAAE,EAFP;AAGTC,MAAAA,eAAe,EAAE,EAHR;AAITC,MAAAA,KAAK,EAAE,EAJE;AAKTC,MAAAA,OAAO,EAAE,EALA;AAMTC,MAAAA,QAAQ,EAAE;AAND,KAAb;AAQH;;AAEDC,EAAAA,kBAAkB,GAAE;AAChB,SAAKV,gBAAL,CAAsBW,gBAAtB,GAAyCC,IAAzC,CAA8CC,QAAQ,IAAI;AACtDC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,QAAQ,CAACG,IAAnC;AACA,WAAKd,aAAL,GAAqBW,QAAQ,CAACG,IAA9B;AACH,KAHD,EAGGC,KAAK,IAAI;AACRH,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBE,KAAvB;AACH,KALD;AAMA,SAAKpB,eAAL,CAAqBqB,gBAArB,GAAwCN,IAAxC,CAA8CC,QAAD,IAAc;AACvD,WAAKZ,YAAL,GAAoBY,QAAQ,CAACG,IAA7B;AACA,WAAKf,YAAL,CAAkBkB,OAAlB,CAA0B,CAACC,QAAD,EAAWC,aAAX,KAA6B;AACnD,aAAKvB,cAAL,CAAoBwB,qBAApB,CAA0CF,QAAQ,CAACG,GAAnD,EAAwDX,IAAxD,CAA6DC,QAAQ,IAAI;AACrEO,UAAAA,QAAQ,CAAC,UAAD,CAAR,GAAuBP,QAAQ,CAACG,IAAhC;AACAI,UAAAA,QAAQ,CAACI,QAAT,CAAkBL,OAAlB,CAA0B,CAACM,OAAD,EAAUC,YAAV,KAA2B;AACjD,iBAAK3B,YAAL,CAAkB4B,iBAAlB,CAAoCF,OAAO,CAACF,GAA5C,EAAiDX,IAAjD,CAAsDC,QAAQ,IAAI;AAC9DY,cAAAA,OAAO,CAAC,QAAD,CAAP,GAAoBZ,QAAQ,CAACG,IAA7B;;AACA,kBAAGK,aAAa,KAAMD,QAAQ,CAACI,QAAT,CAAkBI,MAAlB,GAAyB,CAA/C,EAAkD;AAC9C,oBAAGF,YAAY,KAAMN,QAAQ,CAACI,QAAT,CAAkBI,MAAlB,GAAyB,CAA9C,EAAiD;AAC7C,uBAAKC,QAAL,CAAc;AAACzB,oBAAAA,UAAU,EAAE,KAAKH;AAAlB,mBAAd;AACH;AACJ;AACJ,aAPD,EAOGgB,KAAK,IAAI;AACRH,cAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBE,KAAvB;AACH,aATD;AAUH,WAXD;AAYH,SAdD,EAcGA,KAAK,IAAI;AACRH,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBE,KAAvB;AACH,SAhBD;AAiBH,OAlBD;AAmBH,KArBD,EAqBIA,KAAD,IAAW;AACVH,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBE,KAAvB;AACH,KAvBD;AAwBH;;AAEDa,EAAAA,MAAM,GAAE;AACJhB,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsC,KAAKnB,KAAL,CAAWmC,QAAX,CAAoB5B,KAApB,CAA0B6B,SAAhE;AACA,QAAIC,KAAK,GAAG,EAAZ;AAEAnB,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuB,KAAKZ,KAA5B;AACA,SAAKA,KAAL,CAAWC,UAAX,CAAsBe,OAAtB,CAA8BC,QAAQ,IAAI;AACtCA,MAAAA,QAAQ,CAACI,QAAT,CAAkBL,OAAlB,CAA0BM,OAAO,IAAI;AACjCQ,QAAAA,KAAK,CAACC,IAAN,CAAW,KAAKC,SAAL,CAAef,QAAf,EAAwBK,OAAxB,CAAX;AACH,OAFD;AAGH,KAJD;AAMA,wBAAO;AAAK,MAAA,KAAK,EAAI;AAACW,QAAAA,SAAS,EAAE;AAAZ,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACMH,KADN,eAEK,oBAAC,UAAD;AACI,MAAA,OAAO,EAAG,YADd;AAEI,MAAA,OAAO,EAAI,KAAK9B,KAAL,CAAWE,cAF1B;AAGI,MAAA,QAAQ,EAAI,KAAKF,KAAL,CAAWG,eAH3B;AAII,MAAA,WAAW,EAAI,KAAK+B,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFL,eAQK,oBAAC,YAAD;AAAc,MAAA,KAAK,EAAI,KAAKnC,KAAL,CAAWI,KAAlC;AAAyC,MAAA,OAAO,EAAI,KAAKJ,KAAL,CAAWK,OAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARL,eASK,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAI,KAAK+B,YAAL,EAAnB;AAAwC,MAAA,OAAO,EAAI,KAAKpC,KAAL,CAAWM,QAA9D;AAAwE,MAAA,IAAI,EAAG,IAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATL,CAAP;AAWH;;AAED0B,EAAAA,SAAS,CAACf,QAAD,EAAWK,OAAX,EAAmB;AACxB,wBAAO,oBAAC,WAAD;AACP,MAAA,aAAa,EAAI,KAAKe,aAAL,CAAmBF,IAAnB,CAAwB,IAAxB,CADV;AAEP,MAAA,QAAQ,EAAIlB,QAAQ,CAACqB,IAFd;AAGP,MAAA,SAAS,EAAI,KAAKvC,aAAL,CAAmBwC,MAAnB,CAA0BC,SAAS,IAAIA,SAAS,CAACpB,GAAV,KAAkBE,OAAO,CAACkB,SAAjE,EAA4E,CAA5E,EAA+EF,IAHrF;AAIP,MAAA,OAAO,EAAIhB,OAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAKH;;AAEDe,EAAAA,aAAa,CAACnC,cAAD,EAAiBC,eAAjB,EAAiC;AAC1C,SAAKuB,QAAL,CAAc;AAACxB,MAAAA,cAAD;AAAgBC,MAAAA;AAAhB,KAAd;AACH;;AACD+B,EAAAA,gBAAgB,GAAE;AACd,SAAKR,QAAL,CAAc;AAACtB,MAAAA,KAAK,EAAE,aAAR;AAAuBC,MAAAA,OAAO,EAAE;AAAhC,KAAd;AACH;;AACDC,EAAAA,QAAQ,GAAE;AACN,SAAKoB,QAAL,CAAc;AAACpB,MAAAA,QAAQ,EAAE;AAAX,KAAd;AACH;;AACD8B,EAAAA,YAAY,GAAE;AACV,WAAO,CACH,KAAKK,WAAL,CAAiB,qBAAjB,EAAwC,MAAxC,EAAgD,EAAhD,EAAoD,CAApD,EAAsD,EAAtD,CADG,EAEH,KAAKA,WAAL,CAAiB,aAAjB,EAAgC,MAAhC,EAAwC,EAAxC,EAA4C,CAA5C,EAA8C,EAA9C,CAFG,EAGH,KAAKA,WAAL,CAAiB,qBAAjB,EAAwC,OAAxC,EAAiD,EAAjD,EAAqD,CAArD,EAAuD,EAAvD,CAHG,EAIH,KAAKA,WAAL,CAAiB,cAAjB,EAAiC,MAAjC,EAAyC,EAAzC,EAA6C,CAA7C,EAA+C,EAA/C,CAJG,EAKH,KAAKA,WAAL,CAAiB,kBAAjB,EAAqC,MAArC,EAA6C,EAA7C,EAAiD,CAAjD,EAAmD,EAAnD,CALG,EAMH,KAAKA,WAAL,CAAiB,oBAAjB,EAAuC,MAAvC,EAA+C,EAA/C,EAAmD,CAAnD,EAAqD,EAArD,CANG,EAOH,KAAKA,WAAL,CAAiB,sBAAjB,EAAyC,MAAzC,EAAiD,EAAjD,EAAqD,CAArD,EAAuD,EAAvD,CAPG,EAQH,KAAKA,WAAL,CAAiB,kBAAjB,EAAqC,MAArC,EAA6C,EAA7C,EAAiD,CAAjD,EAAmD,EAAnD,CARG,EASH,KAAKA,WAAL,CAAiB,oBAAjB,EAAsC,MAAtC,EAA8C,EAA9C,EAAkD,CAAlD,EAAoD,EAApD,CATG,EAUH,KAAKA,WAAL,CAAiB,kCAAjB,EAAoD,MAApD,EAA4D,EAA5D,EAAgE,CAAhE,EAAkE,EAAlE,CAVG,EAWH,KAAKA,WAAL,CAAiB,oBAAjB,EAAsC,MAAtC,EAA8C,EAA9C,EAAkD,EAAlD,EAAqD,EAArD,CAXG,EAYH,KAAKA,WAAL,CAAiB,kBAAjB,EAAoC,MAApC,EAA4C,EAA5C,EAAgD,EAAhD,EAAmD,EAAnD,CAZG,EAaH,KAAKA,WAAL,CAAiB,oBAAjB,EAAsC,MAAtC,EAA8C,EAA9C,EAAkD,EAAlD,EAAqD,EAArD,CAbG,EAcH,KAAKA,WAAL,CAAiB,qBAAjB,EAAuC,MAAvC,EAA+C,EAA/C,EAAmD,EAAnD,EAAsD,EAAtD,CAdG,EAeH,KAAKA,WAAL,CAAiB,qBAAjB,EAAuC,MAAvC,EAA+C,EAA/C,EAAmD,EAAnD,EAAsD,EAAtD,CAfG,EAgBH,KAAKA,WAAL,CAAiB,gBAAjB,EAAkC,MAAlC,EAA0C,EAA1C,EAA8C,EAA9C,EAAiD,EAAjD,CAhBG,EAiBH,KAAKA,WAAL,CAAiB,6CAAjB,EAA+D,MAA/D,EAAuE,EAAvE,EAA2E,EAA3E,EAA8E,EAA9E,CAjBG,EAkBH,KAAKA,WAAL,CAAiB,iBAAjB,EAAmC,MAAnC,EAA2C,EAA3C,EAA+C,EAA/C,EAAkD,EAAlD,CAlBG,EAmBH,KAAKA,WAAL,CAAiB,iBAAjB,EAAmC,MAAnC,EAA2C,EAA3C,EAA+C,EAA/C,EAAkD,EAAlD,CAnBG,EAoBH,KAAKA,WAAL,CAAiB,gBAAjB,EAAkC,MAAlC,EAA0C,EAA1C,EAA8C,EAA9C,EAAiD,EAAjD,CApBG,EAqBH,KAAKA,WAAL,CAAiB,kBAAjB,EAAoC,MAApC,EAA4C,EAA5C,EAAgD,EAAhD,EAAmD,EAAnD,CArBG,EAsBH,KAAKA,WAAL,CAAiB,qCAAjB,EAAuD,MAAvD,EAA+D,EAA/D,EAAmE,EAAnE,EAAsE,EAAtE,CAtBG,CAAP;AAwBH;;AAEDA,EAAAA,WAAW,CAACC,QAAD,EAAWC,IAAX,EAAiBC,OAAjB,EAA0BC,EAA1B,EAA6BC,MAA7B,EAAoC;AAC3C,WAAO;AAACJ,MAAAA,QAAD;AAAWC,MAAAA,IAAX;AAAiBC,MAAAA,OAAjB;AAA0BC,MAAAA,EAA1B;AAA8BC,MAAAA;AAA9B,KAAP;AACH;;AA3H6B;;AA8HlC,eAAevD,UAAf","sourcesContent":["import React, {Component} from 'react';\nimport BusinessService from '../services/business';\nimport ProductService from '../services/product';\nimport CoverService from '../services/cover';\nimport InsuranceService from '../services/insurance';\nimport ProductCard from './ProductCard';\nimport CoverModal from './CoverModal';\nimport CongratModal from './CongratModal';\nimport Form from '../containers/Forms/Form';\n\nclass Comparison extends Component{\n    constructor(props){\n        super(props);\n        this.businessService = new BusinessService();\n        this.productService = new ProductService();\n        this.coverService = new CoverService();\n        this.insuranceService = new InsuranceService()\n        this.businessList = [];\n        this.insuranceList = [];\n\n        this.state = {\n            businesses: [],\n            currentProduct: {}, \n            currentBusiness: '',\n            title: '',\n            message: '', \n            showForm: false\n        }\n    }\n\n    componentWillMount(){\n        this.insuranceService.getAllInsurances().then(response => {\n            console.log('RESPONSE: ', response.data);\n            this.insuranceList = response.data;\n        }, error => {\n            console.log('[ERROR]', error);\n        })\n        this.businessService.getAllBusinesses().then((response) => {\n            this.businessList = response.data;\n            this.businessList.forEach((business, businessIndex) => {\n                this.productService.getProductsByBusiness(business._id).then(response => {\n                    business['products'] = response.data;\n                    business.products.forEach((product, productIndex) => {\n                        this.coverService.getCoverByProduct(product._id).then(response => {\n                            product['covers'] = response.data;\n                            if(businessIndex === (business.products.length-1)){\n                                if(productIndex === (business.products.length-1)){\n                                    this.setState({businesses: this.businessList});\n                                }\n                            }\n                        }, error => {\n                            console.log('[ERROR]', error);\n                        });\n                    });\n                }, error => {\n                    console.log('[ERROR]', error);\n                })\n            });\n        }, (error) => {\n            console.log('[ERROR]', error);\n        })\n    }\n\n    render(){\n        console.log('HAVING THE QUESTIONS: ', this.props.location.state.questions);\n        let cards = [];\n\n        console.log('state: ', this.state);\n        this.state.businesses.forEach(business => {\n            business.products.forEach(product => {\n                cards.push(this.buildCard(business,product));\n            });\n        });\n\n        return <div style = {{marginTop: '100px'}}>\n                    {cards}\n                    <CoverModal\n                        modalID = 'coverModal'\n                        product = {this.state.currentProduct}\n                        business = {this.state.currentBusiness}\n                        showCongrat = {this.showCongratModal.bind(this)}\n                    /> \n                    <CongratModal title = {this.state.title} message = {this.state.message}/>\n                    <Form questions = {this.getQuestions()} visible = {this.state.showForm} type = 'lf'/>\n                </div>\n    }\n\n    buildCard(business, product){\n        return <ProductCard\n        onModalOpened = {this.onModalOpened.bind(this)}\n        business = {business.name}\n        insurance = {this.insuranceList.filter(insurance => insurance._id === product.insurance)[0].name}\n        product = {product}/>\n    }\n\n    onModalOpened(currentProduct, currentBusiness){\n        this.setState({currentProduct,currentBusiness});\n    }\n    showCongratModal(){\n        this.setState({title: 'FELICIDADES', message: 'En un momento te contactara un agente'});\n    }\n    showForm(){\n        this.setState({showForm: true});\n    }\n    getQuestions(){\n        return [\n            this.getQuestion('Fecha de Nacimiento', 'text', [], 0,''),\n            this.getQuestion('Edad Actual', 'text', [], 1,''),\n            this.getQuestion('Lugar de Nacimiento', 'email', [], 2,''),\n            this.getQuestion('Estado Civil', 'text', [], 3,''),\n            this.getQuestion('Ocupacion Actual', 'text', [], 4,''),\n            this.getQuestion('Profesion u Oficio', 'text', [], 5,''),\n            this.getQuestion('Nombre de la Empresa', 'text', [], 6,''),\n            this.getQuestion('Posicion o Cargo', 'text', [], 7,''),\n            this.getQuestion('Antig체edad Laboral','text', [], 8,''),\n            this.getQuestion('Direccion completa de Residencia','text', [], 9,''),\n            this.getQuestion('Ingresos Mensuales','text', [], 11,''),\n            this.getQuestion('Gastos Mensuales','text', [], 12,''),\n            this.getQuestion('Antig체edad Laboral','text', [], 13,''),\n            this.getQuestion('Activos Aproximados','text', [], 14,''),\n            this.getQuestion('Pasivos Aproximados','text', [], 15,''),\n            this.getQuestion('Tipo de Poliza','text', [], 16,''),\n            this.getQuestion('Tipo de divisa para la emisi처n de la p처liza','text', [], 17,''),\n            this.getQuestion('Numero de Placa','text', [], 18,''),\n            this.getQuestion('Serie de chasis','text', [], 19,''),\n            this.getQuestion('Serie de motor','text', [], 20,''),\n            this.getQuestion('Uso del vehiculo','text', [], 21,''),\n            this.getQuestion('Valor de Mercado Actual de Vehiculo','text', [], 22,'')  \n        ]\n    }\n\n    getQuestion(question, type, options, id,answer){\n        return {question, type, options, id, answer};\n    }\n}\n\nexport default Comparison;"]},"metadata":{},"sourceType":"module"}