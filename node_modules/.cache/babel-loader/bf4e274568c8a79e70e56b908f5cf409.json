{"ast":null,"code":"import _classCallCheck from\"/Users/manuel/Documents/CA/ca-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/manuel/Documents/CA/ca-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _createSuper from\"/Users/manuel/Documents/CA/ca-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _inherits from\"/Users/manuel/Documents/CA/ca-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import'../../styles/Input.css';import React,{Component}from'react';import Form from'./Form';import{FormLabel,Select,MenuItem,FormControl}from'@material-ui/core';import{isEmpty}from'lodash';var SelectInput=/*#__PURE__*/function(_Component){_inherits(SelectInput,_Component);var _super=_createSuper(SelectInput);function SelectInput(props){var _this;_classCallCheck(this,SelectInput);_this=_super.call(this,props);_this.handleClose=function(){_this.setState({open:false});};_this.handleOpen=function(){_this.setState({open:true});};_this.handleChange=function(event){var value=event.target.value;_this.storeQuestion(value);_this.setState({value:value});};_this.renderOptions=function(){return _this.props.question.inputType.options.map(function(option,index){return/*#__PURE__*/React.createElement(MenuItem,{value:option,key:'s'+index},option);});};_this.subquestionsExist=function(key){if(!_this.props.question.inputType.subquestions)return false;if(!_this.props.question.inputType.subquestions[key])return false;if(_this.props.question.inputType.subquestions[key].length===0)return false;return true;};_this.renderSubQuestions=function(key){_this.hasSubquestions=_this.subquestionsExist(key);if(_this.hasSubquestions===false)return null;return/*#__PURE__*/React.createElement(Form,{parentForm:false,form:{questions:_this.props.question.inputType.subquestions[key]},subform:true,onStateChange:_this.handleStateChange});};_this.storeQuestion=function(answer){_this.hasSubquestions=_this.subquestionsExist(answer);var isRequired=_this.props.question.inputType.required?!isEmpty(answer):true;_this.props.requiredQuestion(isRequired,_this.props.index);var completedQuestion={question:_this.props.question.question,answer:answer};if(_this.hasSubquestions===true)completedQuestion['completedSubquestions']=_this.subquestions;_this.props.onStateChange(completedQuestion,_this.props.index);};_this.handleStateChange=function(subquestions){if(_this.hasSubquestions===false)return;_this.subquestions=subquestions;_this.storeQuestion(_this.state.value);};_this.state={value:'',open:false};_this.subquestions=[];_this.hasSubquestions=false;return _this;}_createClass(SelectInput,[{key:\"componentDidMount\",value:function componentDidMount(){this.storeQuestion(this.state.value);}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(FormControl,{className:\"select-input input-container\",fullWidth:true},/*#__PURE__*/React.createElement(FormLabel,{component:\"legend\"},this.props.question.question),/*#__PURE__*/React.createElement(Select// autoWidth={true}\n,{labelId:\"demo-controlled-open-select-label\",id:\"demo-controlled-open-select\",open:this.state.open,onClose:this.handleClose,onOpen:this.handleOpen,value:this.state.value,onChange:this.handleChange,className:\"select-component\"},/*#__PURE__*/React.createElement(MenuItem,{value:\"\"},/*#__PURE__*/React.createElement(\"em\",null,\"None\")),this.renderOptions())),this.renderSubQuestions(this.state.value));}}]);return SelectInput;}(Component);export default SelectInput;","map":{"version":3,"sources":["/Users/manuel/Documents/CA/ca-fe/src/components/Form/SelectInput.js"],"names":["React","Component","Form","FormLabel","Select","MenuItem","FormControl","isEmpty","SelectInput","props","handleClose","setState","open","handleOpen","handleChange","event","value","target","storeQuestion","renderOptions","question","inputType","options","map","option","index","subquestionsExist","key","subquestions","length","renderSubQuestions","hasSubquestions","questions","handleStateChange","answer","isRequired","required","requiredQuestion","completedQuestion","onStateChange","state"],"mappings":"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","sourcesContent":["import '../../styles/Input.css';\nimport React, { Component } from 'react';\nimport Form from './Form';\nimport { FormLabel, Select, MenuItem, FormControl } from '@material-ui/core';\nimport { isEmpty } from 'lodash';\n\nclass SelectInput extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: '',\n            open: false\n        }\n\n        this.subquestions = [];\n        this.hasSubquestions = false;\n    }\n\n    componentDidMount() {\n        this.storeQuestion(this.state.value);\n    }\n\n    handleClose = () => {\n        this.setState({ open: false });\n    }\n\n    handleOpen = () => {\n        this.setState({ open: true });\n    }\n\n    handleChange = (event) => {\n        let { value } = event.target;\n        this.storeQuestion(value);\n        this.setState({ value });\n    }\n\n    render() {\n        return <div>\n            <FormControl className='select-input input-container' fullWidth={true}>\n                <FormLabel component=\"legend\">{this.props.question.question}</FormLabel>\n                <Select\n                    // autoWidth={true}\n                    labelId=\"demo-controlled-open-select-label\"\n                    id=\"demo-controlled-open-select\"\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    onOpen={this.handleOpen}\n                    value={this.state.value}\n                    onChange={this.handleChange}\n                    className='select-component'\n                >\n                    <MenuItem value=\"\">\n                        <em>None</em>\n                    </MenuItem>\n                    {this.renderOptions()}\n                </Select>\n            </FormControl>\n            {this.renderSubQuestions(this.state.value)}\n        </div>\n\n    }\n\n    renderOptions = () => {\n        return this.props.question.inputType.options.map((option, index) => {\n            return <MenuItem value={option} key={'s' + index}>{option}</MenuItem>\n        })\n    }\n\n    subquestionsExist = (key) => {\n        if (!this.props.question.inputType.subquestions) return false;\n        if (!this.props.question.inputType.subquestions[key]) return false;\n        if (this.props.question.inputType.subquestions[key].length === 0) return false;\n        return true;\n    }\n\n    renderSubQuestions = (key) => {\n        this.hasSubquestions = this.subquestionsExist(key);\n        if (this.hasSubquestions === false) return null;\n        return <Form parentForm={false} form={{ questions: this.props.question.inputType.subquestions[key] }} subform onStateChange={this.handleStateChange} />\n    }\n\n    storeQuestion = (answer) => {\n        this.hasSubquestions = this.subquestionsExist(answer);\n\n        const isRequired = this.props.question.inputType.required ? !isEmpty(answer) : true;\n        this.props.requiredQuestion(isRequired, this.props.index);\n\n        let completedQuestion = {\n            question: this.props.question.question,\n            answer\n        }\n\n        if (this.hasSubquestions === true) completedQuestion['completedSubquestions'] = this.subquestions;\n        this.props.onStateChange(completedQuestion, this.props.index);\n    }\n\n    handleStateChange = (subquestions) => {\n        if (this.hasSubquestions === false) return;\n        this.subquestions = subquestions;\n        this.storeQuestion(this.state.value)\n    }\n}\n\nexport default SelectInput;"]},"metadata":{},"sourceType":"module"}