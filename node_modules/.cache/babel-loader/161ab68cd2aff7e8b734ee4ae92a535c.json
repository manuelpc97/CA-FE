{"ast":null,"code":"import _regeneratorRuntime from\"/Users/manuel/Documents/CA/ca-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/manuel/Documents/CA/ca-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/manuel/Documents/CA/ca-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/manuel/Documents/CA/ca-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _createSuper from\"/Users/manuel/Documents/CA/ca-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _inherits from\"/Users/manuel/Documents/CA/ca-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import{Grid}from'@material-ui/core';import InsuranceCard from'./InsuranceCard';import Form from'./../Form/Form';import{connect}from'react-redux';import{getAllInsurances,clearForm,selectTab,getFormById}from'../../actions';var Insurances=/*#__PURE__*/function(_Component){_inherits(Insurances,_Component);var _super=_createSuper(Insurances);function Insurances(props){var _this;_classCallCheck(this,Insurances);_this=_super.call(this,props);_this.getInsuranceCards=function(){return _this.props.insurances.map(function(insurance,index){return/*#__PURE__*/React.createElement(InsuranceCard,{insurance:insurance,key:index,handleClick:_this.onCardClick});});};_this.showForm=function(){_this.setState({showForm:true});};_this.dismissForm=function(){_this.setState({showForm:false});};_this.onBack=function(){_this.setState({insurance:{}});_this.props.clearForm();_this.dismissForm();};_this.onSuccess=function(){_this.props.selectTab(2,{});};_this.onCardClick=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(insurance){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_this.setState({insurance:insurance});if(insurance.form){_context.next=5;break;}_this.onSuccess();_context.next=8;break;case 5:_context.next=7;return _this.props.getFormById(insurance.form);case 7:if(_this.props.hasForm===true){_this.showForm();}case 8:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();_this.state={showForm:false,insurance:{}};return _this;}_createClass(Insurances,[{key:\"componentDidMount\",value:function(){var _componentDidMount=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return this.props.getAllInsurances();case 2:case\"end\":return _context2.stop();}}},_callee2,this);}));function componentDidMount(){return _componentDidMount.apply(this,arguments);}return componentDidMount;}()},{key:\"render\",value:function render(){return this.state.showForm===false?/*#__PURE__*/React.createElement(Grid,{container:true,spacing:1},this.getInsuranceCards()):/*#__PURE__*/React.createElement(Form,{form:this.props.form,parentForm:true,handleBack:this.onBack,handleSubmit:this.onSuccess,insurance:this.state.insurance});}}]);return Insurances;}(Component);var mapStateToProps=function mapStateToProps(state){return{insurances:state.insurance.insurances,form:state.form.form,hasForm:state.form.hasForm};};export default connect(mapStateToProps,{getAllInsurances:getAllInsurances,clearForm:clearForm,selectTab:selectTab,getFormById:getFormById})(Insurances);","map":{"version":3,"sources":["/Users/manuel/Documents/CA/ca-fe/src/components/Content/Insurances.js"],"names":["React","Component","Grid","InsuranceCard","Form","connect","getAllInsurances","clearForm","selectTab","getFormById","Insurances","props","getInsuranceCards","insurances","map","insurance","index","onCardClick","showForm","setState","dismissForm","onBack","onSuccess","form","hasForm","state","mapStateToProps"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Grid} from '@material-ui/core';\n\nimport InsuranceCard from './InsuranceCard';\nimport Form from './../Form/Form';\n\nimport {connect} from 'react-redux';\nimport {getAllInsurances, clearForm,selectTab, getFormById} from '../../actions';\n\nclass Insurances extends Component{\n    constructor(props){\n        super(props); \n        this.state = {\n            showForm: false,\n            insurance: {}\n        }\n    }\n\n    async componentDidMount(){\n        await this.props.getAllInsurances();\n    }\n\n    render(){\n        return this.state.showForm === false ? \n                <Grid container spacing = {1}>\n                    {this.getInsuranceCards()}\n                </Grid> : \n                <Form \n                    form = {this.props.form} \n                    parentForm = {true} \n                    handleBack = {this.onBack} \n                    handleSubmit = {this.onSuccess} \n                    insurance = {this.state.insurance}/>\n    }\n    \n    getInsuranceCards = () => {\n        return this.props.insurances.map((insurance, index) => {\n            return <InsuranceCard insurance = {insurance} key = {index} handleClick = {this.onCardClick}/>\n        })\n    }\n\n    showForm = () => {\n        this.setState({showForm: true});\n    }\n\n    dismissForm = () => {\n        this.setState({showForm: false});\n    }\n\n    onBack = () => {\n        this.setState({insurance: {}});\n        this.props.clearForm();\n        this.dismissForm();\n    }\n\n    onSuccess = () => {\n        this.props.selectTab(2, {})\n    }\n\n    onCardClick = async (insurance) => {\n        this.setState({insurance});\n        if(!insurance.form) {\n            this.onSuccess();\n        }else{\n            await this.props.getFormById(insurance.form);\n            if(this.props.hasForm === true){\n                this.showForm();\n            }\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        insurances: state.insurance.insurances,\n        form: state.form.form, \n        hasForm: state.form.hasForm\n    };\n}\n\nexport default connect(mapStateToProps, {getAllInsurances, clearForm, selectTab, getFormById})(Insurances);"]},"metadata":{},"sourceType":"module"}