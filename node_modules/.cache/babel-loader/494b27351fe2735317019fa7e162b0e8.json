{"ast":null,"code":"var _jsxFileName = \"/Users/manuel/Documents/CA/ca-fe/src/components/Content/Products.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getAllProducts, getProductsByInsurance, getAllBusiness } from './../../actions';\n\nclass Product extends Component {\n  constructor(props) {\n    super(props);\n\n    this.buildProductManager = () => {\n      if (this.props.products.length === 0 || this.props.businessList.length === 0) return;\n      this.manager = this.props.products.map(product => {\n        let newProduct = Object.assign({}, product);\n        newProduct.business = this.props.businessList.find(business => product.business === business._id);\n      });\n    };\n\n    this.manager = [];\n  }\n\n  async componentDidMount() {\n    if (this.props.params.insurance) {\n      await this.props.getProductsByInsurance(this.props.params.insurance._id);\n    } else {\n      await this.props.getAllProducts();\n    }\n\n    await this.props.getAllBusiness();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 16\n      }\n    }, \"PRODUCTS\");\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    products: state.product.products,\n    businessList: state.business.businesses\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getAllProducts,\n  getProductsByInsurance,\n  getAllBusiness\n})(Product);","map":{"version":3,"sources":["/Users/manuel/Documents/CA/ca-fe/src/components/Content/Products.js"],"names":["React","Component","connect","getAllProducts","getProductsByInsurance","getAllBusiness","Product","constructor","props","buildProductManager","products","length","businessList","manager","map","product","newProduct","Object","assign","business","find","_id","componentDidMount","params","insurance","render","mapStateToProps","state","businesses"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,cAAR,EAAwBC,sBAAxB,EAAgDC,cAAhD,QAAqE,iBAArE;;AAEA,MAAMC,OAAN,SAAsBL,SAAtB,CAA+B;AAC3BM,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAkBlBC,mBAlBkB,GAkBI,MAAM;AACxB,UAAG,KAAKD,KAAL,CAAWE,QAAX,CAAoBC,MAApB,KAA+B,CAA/B,IAAoC,KAAKH,KAAL,CAAWI,YAAX,CAAwBD,MAAxB,KAAmC,CAA1E,EAA6E;AAC7E,WAAKE,OAAL,GAAe,KAAKL,KAAL,CAAWE,QAAX,CAAoBI,GAApB,CAAwBC,OAAO,IAAI;AAC9C,YAAIC,UAAU,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,OAAlB,CAAjB;AACAC,QAAAA,UAAU,CAACG,QAAX,GAAsB,KAAKX,KAAL,CAAWI,YAAX,CAAwBQ,IAAxB,CAA6BD,QAAQ,IAAIJ,OAAO,CAACI,QAAR,KAAqBA,QAAQ,CAACE,GAAvE,CAAtB;AACH,OAHc,CAAf;AAKH,KAzBiB;;AAEd,SAAKR,OAAL,GAAe,EAAf;AACH;;AAED,QAAMS,iBAAN,GAAyB;AACrB,QAAG,KAAKd,KAAL,CAAWe,MAAX,CAAkBC,SAArB,EAA+B;AAC3B,YAAM,KAAKhB,KAAL,CAAWJ,sBAAX,CAAkC,KAAKI,KAAL,CAAWe,MAAX,CAAkBC,SAAlB,CAA4BH,GAA9D,CAAN;AACH,KAFD,MAEK;AACD,YAAM,KAAKb,KAAL,CAAWL,cAAX,EAAN;AACH;;AACD,UAAM,KAAKK,KAAL,CAAWH,cAAX,EAAN;AACH;;AAEDoB,EAAAA,MAAM,GAAE;AACJ,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACH;;AAjB0B;;AA6B/B,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHjB,IAAAA,QAAQ,EAAEiB,KAAK,CAACZ,OAAN,CAAcL,QADrB;AAEHE,IAAAA,YAAY,EAAEe,KAAK,CAACR,QAAN,CAAeS;AAF1B,GAAP;AAIH,CALD;;AAOA,eAAe1B,OAAO,CAACwB,eAAD,EAAkB;AAACvB,EAAAA,cAAD;AAAiBC,EAAAA,sBAAjB;AAAyCC,EAAAA;AAAzC,CAAlB,CAAP,CAAmFC,OAAnF,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {getAllProducts, getProductsByInsurance, getAllBusiness} from './../../actions';\n\nclass Product extends Component{\n    constructor(props){\n        super(props);\n        this.manager = [];\n    }\n\n    async componentDidMount(){\n        if(this.props.params.insurance){\n            await this.props.getProductsByInsurance(this.props.params.insurance._id);\n        }else{\n            await this.props.getAllProducts();\n        }\n        await this.props.getAllBusiness();\n    }\n\n    render(){\n        return <div>PRODUCTS</div>\n    }\n\n    buildProductManager = () => {\n        if(this.props.products.length === 0 || this.props.businessList.length === 0) return;\n        this.manager = this.props.products.map(product => {\n            let newProduct = Object.assign({}, product);\n            newProduct.business = this.props.businessList.find(business => product.business === business._id);\n        });\n\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        products: state.product.products,\n        businessList: state.business.businesses\n    }\n}\n\nexport default connect(mapStateToProps, {getAllProducts, getProductsByInsurance, getAllBusiness})(Product);"]},"metadata":{},"sourceType":"module"}